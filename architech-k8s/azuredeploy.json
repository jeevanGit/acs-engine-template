{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "agentpool1Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpool1Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpool1Subnet": {
      "defaultValue": "10.240.0.0/12",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpool1'."
      },
      "type": "string"
    },
    "agentpool1VMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16s_v3",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2s_v3",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32s_v3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4s_v3",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64s_v3",
        "Standard_D8_v3",
        "Standard_D8s_v3",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16_v3",
        "Standard_E16s_v3",
        "Standard_E2_v3",
        "Standard_E2s_v3",
        "Standard_E32-16s_v3",
        "Standard_E32-8s_v3",
        "Standard_E32_v3",
        "Standard_E32s_v3",
        "Standard_E4_v3",
        "Standard_E4s_v3",
        "Standard_E64-16s_v3",
        "Standard_E64-32s_v3",
        "Standard_E64_v3",
        "Standard_E64s_v3",
        "Standard_E8_v3",
        "Standard_E8s_v3",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_NC12",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC6",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND6s",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpool1osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "agentpool1osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "agentpool1osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "agentpool1osImageVersion": {
      "defaultValue": "16.04.201801260",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "cloudProviderBackoff": {
      "defaultValue": "false",
      "metadata": {
        "description": "Enable cloudprovider backoff?"
      },
      "type": "string"
    },
    "cloudProviderBackoffDuration": {
      "defaultValue": "0",
      "metadata": {
        "description": "If backoff enabled, how long until timeout"
      },
      "type": "string"
    },
    "cloudProviderBackoffExponent": {
      "defaultValue": "0",
      "metadata": {
        "description": "If backoff enabled, retry exponent"
      },
      "type": "string"
    },
    "cloudProviderBackoffJitter": {
      "defaultValue": "0",
      "metadata": {
        "description": "If backoff enabled, jitter factor between retries"
      },
      "type": "string"
    },
    "cloudProviderBackoffRetries": {
      "defaultValue": "0",
      "metadata": {
        "description": "If backoff enabled, how many times to retry"
      },
      "type": "string"
    },
    "cloudProviderRatelimit": {
      "defaultValue": "false",
      "metadata": {
        "description": "Enable cloudprovider rate limiting?"
      },
      "type": "string"
    },
    "cloudProviderRatelimitBucket": {
      "defaultValue": "0",
      "metadata": {
        "description": "If rate limiting enabled, bucket size"
      },
      "type": "string"
    },
    "cloudProviderRatelimitQPS": {
      "defaultValue": "0",
      "metadata": {
        "description": "If rate limiting enabled, target maximum QPS"
      },
      "type": "string"
    },
    "cniPluginsURL": {
      "defaultValue": "https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-latest.tgz",
      "type": "string"
    },
    "containerRuntime": {
      "allowedValues": [
        "docker",
        "clear-containers"
      ],
      "defaultValue": "docker",
      "metadata": {
        "description": "The container runtime to use (docker|clear-containers)"
      },
      "type": "string"
    },
    "dockerBridgeCidr": {
      "defaultValue": "172.17.0.1/16",
      "metadata": {
        "description": "Docker bridge network IP address and subnet"
      },
      "type": "string"
    },
    "dockerEngineDownloadRepo": {
      "defaultValue": "https://aptdocker.azureedge.net/repo",
      "metadata": {
        "description": "The docker engine download url for kubernetes."
      },
      "type": "string"
    },
    "dockerEngineVersion": {
      "allowedValues": [
        "17.05.*",
        "17.04.*",
        "17.03.*",
        "1.13.*",
        "1.12.*",
        "1.11.*"
      ],
      "defaultValue": "1.13.*",
      "metadata": {
        "description": "The docker engine version to install."
      },
      "type": "string"
    },
    "etcdDiskSizeGB": {
      "defaultValue": "128",
      "metadata": {
        "description": "Size in GB to allocate for etcd volume"
      },
      "type": "string"
    },
    "etcdDownloadURLBase": {
      "defaultValue": "https://acs-mirror.azureedge.net/github-coreos",
      "metadata": {
        "description": "etcd image base URL"
      },
      "type": "string"
    },

    "etcdVersion": {
      "defaultValue": "3.2.11",
      "metadata": {
        "description": "etcd version"
      },
      "type": "string"
    },
    "firstConsecutiveStaticIP": {
      "defaultValue": "10.255.255.5",
      "metadata": {
        "description": "Sets the static IP of the first master"
      },
      "type": "string"
    },
    "fqdnEndpointSuffix": {
      "defaultValue": "cloudapp.azure.com",
      "metadata": {
        "description": "Endpoint of FQDN."
      },
      "type": "string"
    },
    "gcHighThreshold": {
      "defaultValue": 85,
      "metadata": {
        "description": "High Threshold for Image Garbage collection on each node"
      },
      "type": "int"
    },
    "gcLowThreshold": {
      "defaultValue": 80,
      "metadata": {
        "description": "Low Threshold for Image Garbage collection on each node."
      },
      "type": "int"
    },
    "generatorCode": {
      "defaultValue": "acsengine",
      "metadata": {
        "description": "The generator code used to identify the generator"
      },
      "type": "string"
    },
    "kubeClusterCidr": {
      "defaultValue": "10.240.0.0/12",
      "metadata": {
        "description": "Kubernetes cluster subnet"
      },
      "type": "string"
    },
    "kubeDNSServiceIP": {
      "defaultValue": "10.0.0.10",
      "metadata": {
        "description": "Kubernetes DNS IP"
      },
      "type": "string"
    },
    "kubeServiceCidr": {
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Kubernetes service address space"
      },
      "type": "string"
    },
    "kubernetesACIConnectorCPULimit": {
      "defaultValue": "50m",
      "metadata": {
        "description": "ACI Connector CPU Limit"
      },
      "type": "string"
    },
    "kubernetesACIConnectorCPURequests": {
      "defaultValue": "50m",
      "metadata": {
        "description": "ACI Connector CPU Requests"
      },
      "type": "string"
    },
    "kubernetesACIConnectorClientId": {
      "defaultValue": "",
      "metadata": {
        "description": "Client id for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorClientKey": {
      "defaultValue": "",
      "metadata": {
        "description": "Client key for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorMemoryLimit": {
      "defaultValue": "150Mi",
      "metadata": {
        "description": "ACI Connector Memory Limit"
      },
      "type": "string"
    },
    "kubernetesACIConnectorMemoryRequests": {
      "defaultValue": "150Mi",
      "metadata": {
        "description": "ACI Connector Memory Requests"
      },
      "type": "string"
    },
    "kubernetesACIConnectorNodeName": {
      "defaultValue": "aci-connector",
      "metadata": {
        "description": "Node name for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorOS": {
      "defaultValue": "Linux",
      "metadata": {
        "description": "OS for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorRegion": {
      "defaultValue": "eastus2",
      "metadata": {
        "description": "Region for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorSpec": {
      "defaultValue": "microsoft/",
      "metadata": {
        "description": "The container spec for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorSubscriptionId": {
      "defaultValue": "",
      "metadata": {
        "description": "Subscription id for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorTaint": {
      "defaultValue": "azure.com/aci",
      "metadata": {
        "description": "Taint for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorTenantId": {
      "defaultValue": "",
      "metadata": {
        "description": "Tenant id for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesAddonManagerSpec": {
      "defaultValue": "k8s-gcrio.azureedge.net/kube-addon-manager-amd64:v6.5",
      "metadata": {
        "description": "The container spec for hyperkube."
      },
      "type": "string"
    },
    "kubernetesAddonResizerSpec": {
      "defaultValue": "k8s-gcrio.azureedge.net/addon-resizer:1.7",
      "metadata": {
        "description": "The container spec for addon-resizer."
      },
      "type": "string"
    },
    "kubernetesCcmImageSpec": {
      "defaultValue": "",
      "metadata": {
        "description": "The container spec for cloud-controller-manager."
      },
      "type": "string"
    },
    "kubernetesDNSMasqSpec": {
      "defaultValue": "k8s-gcrio.azureedge.net/k8s-dns-dnsmasq-nanny-amd64:1.14.8",
      "metadata": {
        "description": "The container spec for kube-dnsmasq-amd64."
      },
      "type": "string"
    },
    "kubernetesDashboardCPULimit": {
      "defaultValue": "300m",
      "metadata": {
        "description": "Dashboard CPU Limit."
      },
      "type": "string"
    },
    "kubernetesDashboardCPURequests": {
      "defaultValue": "300m",
      "metadata": {
        "description": "Dashboard CPU Requests."
      },
      "type": "string"
    },
    "kubernetesDashboardMemoryLimit": {
      "defaultValue": "150Mi",
      "metadata": {
        "description": "Dashboard Memory Limit."
      },
      "type": "string"
    },
    "kubernetesDashboardMemoryRequests": {
      "defaultValue": "150Mi",
      "metadata": {
        "description": "Dashboard Memory Requests."
      },
      "type": "string"
    },
    "kubernetesDashboardSpec": {
      "defaultValue": "k8s-gcrio.azureedge.net/kubernetes-dashboard-amd64:v1.8.2",
      "metadata": {
        "description": "The container spec for kubernetes-dashboard-amd64."
      },
      "type": "string"
    },
    "kubernetesExecHealthzSpec": {
      "defaultValue": "k8s-gcrio.azureedge.net/exechealthz-amd64:1.2",
      "metadata": {
        "description": "The container spec for exechealthz-amd64."
      },
      "type": "string"
    },
    "kubernetesHeapsterSpec": {
      "defaultValue": "k8s-gcrio.azureedge.net/heapster-amd64:v1.5.0",
      "metadata": {
        "description": "The container spec for heapster."
      },
      "type": "string"
    },
    "kubernetesHyperkubeSpec": {
      "defaultValue": "k8s-gcrio.azureedge.net/hyperkube-amd64:v1.9.3",
      "metadata": {
        "description": "The container spec for hyperkube."
      },
      "type": "string"
    },
    "kubernetesKubeDNSSpec": {
      "defaultValue": "k8s-gcrio.azureedge.net/k8s-dns-kube-dns-amd64:1.14.8",
      "metadata": {
        "description": "The container spec for kubedns-amd64."
      },
      "type": "string"
    },
    "kubernetesNonMasqueradeCidr": {
      "defaultValue": "10.0.0.0/8",
      "metadata": {
        "description": "kubernetesNonMasqueradeCidr cluster subnet"
      },
      "type": "string"
    },
    "kubernetesPodInfraContainerSpec": {
      "defaultValue": "k8s-gcrio.azureedge.net/pause-amd64:3.1",
      "metadata": {
        "description": "The container spec for pod infra."
      },
      "type": "string"
    },
    "kubernetesReschedulerCPULimit": {
      "defaultValue": "10m",
      "metadata": {
        "description": "Rescheduler CPU Limit."
      },
      "type": "string"
    },
    "kubernetesReschedulerCPURequests": {
      "defaultValue": "10m",
      "metadata": {
        "description": "Rescheduler CPU Requests."
      },
      "type": "string"
    },
    "kubernetesReschedulerMemoryLimit": {
      "defaultValue": "100Mi",
      "metadata": {
        "description": "Rescheduler Memory Limit."
      },
      "type": "string"
    },
    "kubernetesReschedulerMemoryRequests": {
      "defaultValue": "100Mi",
      "metadata": {
        "description": "Rescheduler Memory Requests."
      },
      "type": "string"
    },
    "kubernetesReschedulerSpec": {
      "defaultValue": "k8s-gcrio.azureedge.net/rescheduler:v0.3.1",
      "metadata": {
        "description": "The container spec for rescheduler."
      },
      "type": "string"
    },
    "kubernetesTillerCPULimit": {
      "defaultValue": "50m",
      "metadata": {
        "description": "Helm Tiller CPU Limit."
      },
      "type": "string"
    },
    "kubernetesTillerCPURequests": {
      "defaultValue": "50m",
      "metadata": {
        "description": "Helm Tiller CPU Requests."
      },
      "type": "string"
    },
    "kubernetesTillerMaxHistory": {
      "defaultValue": "0",
      "metadata": {
        "description": "Helm Tiller Max History to Store. '0' for no limit."
      },
      "type": "string"
    },
    "kubernetesTillerMemoryLimit": {
      "defaultValue": "150Mi",
      "metadata": {
        "description": "Helm Tiller Memory Limit."
      },
      "type": "string"
    },
    "kubernetesTillerMemoryRequests": {
      "defaultValue": "150Mi",
      "metadata": {
        "description": "Helm Tiller Memory Requests."
      },
      "type": "string"
    },
    "kubernetesTillerSpec": {
      "defaultValue": "gcrio.azureedge.net/kubernetes-helm/tiller:v2.6.2",
      "metadata": {
        "description": "The container spec for Helm Tiller."
      },
      "type": "string"
    },
    "linuxAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      },
      "type": "string"
    },
    "location": {
      "defaultValue": "eastus2",
      "metadata": {
        "description": "Sets the location for all resources in the cluster"
      },
      "type": "string"
    },
    "masterEndpointDNSNamePrefix": {
      "defaultValue": "architech-k8s",
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string"
    },
    "masterOffset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the master pool where to start creating master VMs.  This value can be from 0 to 4, but must be less than masterCount."
      },
      "type": "int"
    },
    "masterSubnet": {
      "defaultValue": "10.240.0.0/12",
      "metadata": {
        "description": "Sets the subnet of the master node(s)."
      },
      "type": "string"
    },
    "masterVMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16s_v3",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2s_v3",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32s_v3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4s_v3",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64s_v3",
        "Standard_D8_v3",
        "Standard_D8s_v3",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16_v3",
        "Standard_E16s_v3",
        "Standard_E2_v3",
        "Standard_E2s_v3",
        "Standard_E32-16s_v3",
        "Standard_E32-8s_v3",
        "Standard_E32_v3",
        "Standard_E32s_v3",
        "Standard_E4_v3",
        "Standard_E4s_v3",
        "Standard_E64-16s_v3",
        "Standard_E64-32s_v3",
        "Standard_E64_v3",
        "Standard_E64s_v3",
        "Standard_E8_v3",
        "Standard_E8s_v3",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_NC12",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC6",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND6s",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "maxPods": {
      "defaultValue": 110,
      "metadata": {
        "description": "The maximum number of pods per node."
      },
      "type": "int"
    },
    "nameSuffix": {
      "defaultValue": "43438754",
      "metadata": {
        "description": "A string hash of the master DNS name to uniquely identify the cluster."
      },
      "type": "string"
    },
    "networkPolicy": {
      "allowedValues": [
        "none",
        "azure",
        "calico"
      ],
      "defaultValue": "azure",
      "metadata": {
        "description": "The network policy enforcement to use (none|azure|calico)"
      },
      "type": "string"
    },
    "orchestratorName": {
      "defaultValue": "k8s",
      "maxLength": 3,
      "metadata": {
        "description": "The orchestrator name used to identify the orchestrator.  This must be no more than 3 digits in length, otherwise it will exceed Windows Naming"
      },
      "minLength": 3,
      "type": "string"
    },
    "osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "osImageVersion": {
      "defaultValue": "16.04.201801260",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "Client ID (used by cloudprovider)"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "sshRSAPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      },
      "type": "securestring"
    },
    "targetEnvironment": {
      "defaultValue": "AzurePublicCloud",
      "metadata": {
        "description": "The azure deploy environment. Currently support: AzurePublicCloud, AzureChinaCloud"
      },
      "type": "string"
    },
    "vnetCidr": {
      "defaultValue": "10.0.0.0/8",
      "metadata": {
        "description": "Cluster vnet cidr"
      },
      "type": "string"
    },
    "vnetCniLinuxPluginsURL": {
      "defaultValue": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-linux-amd64-latest.tgz",
      "type": "string"
    },
    "vnetCniWindowsPluginsURL": {
      "defaultValue": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-windows-amd64-latest.zip",
      "type": "string"
    }
  },
  "variables": {
    "agentpool1AccountName": "[concat(variables('storageAccountBaseName'), 'agnt0')]",
    "agentpool1AvailabilitySet": "[concat('agentpool1-availabilitySet-', variables('nameSuffix'))]",
    "agentpool1Count": "[parameters('agentpool1Count')]",
    "agentpool1Index": 0,
    "agentpool1Offset": "[parameters('agentpool1Offset')]",
    "agentpool1StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),variables('agentpool1Index'))]",
    "agentpool1StorageAccountsCount": "[add(div(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpool1SubnetName": "[variables('subnetName')]",
    "agentpool1VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpool1-', variables('nameSuffix'), '-')]",
    "agentpool1VMSize": "[parameters('agentpool1VMSize')]",
    "agentpool1VnetSubnetID": "[variables('vnetSubnetID')]",
    "agentpool1osImageOffer": "[parameters('agentpool1osImageOffer')]",
    "agentpool1osImagePublisher": "[parameters('agentpool1osImagePublisher')]",
    "agentpool1osImageSKU": "[parameters('agentpool1osImageSKU')]",
    "agentpool1osImageVersion": "[parameters('agentpool1osImageVersion')]",
    "allocateNodeCidrs": false,
    "apiServerCertificate": "-----BEGIN CERTIFICATE-----\nMIINBTCCCu2gAwIBAgIRAPIj2ge2ZaipRo3f60Y9FX8wDQYJKoZIhvcNAQELBQAw\nDTELMAkGA1UEAxMCY2EwHhcNMTgwNDE5MTc0NzIwWhcNMjAwNDE4MTc0NzIwWjAU\nMRIwEAYDVQQDEwlhcGlzZXJ2ZXIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK\nAoICAQDFH+bLUXMLreOvguiCueMQK/5DeewLSiHE6Oe4D6Hjqds5R68zrxPGmAYc\nu/rNcqg6D8UZ8h6zmM6lsVSHnuiU05wsyQSIO/GbDxZTEu20/bI7zkXehbbkgGWk\nlHnpKj896kndqUr9eg3ujSb+TwongSM/E/tIsw7ISbhNYXlfgIP+3TpmW+4iiwe1\nfdmekWz1uzLvBM27vxeXJctnJcNrKFyGadGhAbL1ftuEy1wi/FacKjL+0YvMVMp7\nlqLAOA/FubjeKamT9jIv70Wn6F+iPecRSd5g4lEMlL6QFPJIoipf3FJYgcPdOvZs\nYkVLaNgPONMbvD6s68/OflIx5gilwr+WqekLjzI/pNX/4vY2W6FBB87lQZmkMOke\nHuW/LayOC/RcW4tYDFX4Z/oiaPij27O0T8lTLuFV7Mxs/4aob9qoh+Q4dJ85RrVA\npK2yUfS1BBCI8WOfJBp/OS4+NVh0bMINgCVur6watoS83waL++Ca5P5xAd9NLdJp\nDsnOQjYwzHprnP497lxo6kpEvdgr8EwXJwZVbAFUiEYLY8VQx58xh+vYf0/EuG4J\nYM+G17YurPRyNiIquEv04A7RB4fo3QhSTtZp3deosp6T781PqXVQ8m/HmN5HfmMo\nQ6bCKZwjUAK6nFiaJdZvI7f5ODV7MOywhAeA5E9AH/30/d8QbQIDAQABo4IIVzCC\nCFMwDgYDVR0PAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB\n/wQCMAAwgggcBgNVHREEgggTMIIID4IuYXJjaGl0ZWNoLWs4cy5hdXN0cmFsaWFl\nYXN0LmNsb3VkYXBwLmF6dXJlLmNvbYIzYXJjaGl0ZWNoLWs4cy5hdXN0cmFsaWFz\nb3V0aGVhc3QuY2xvdWRhcHAuYXp1cmUuY29tgixhcmNoaXRlY2gtazhzLmJyYXpp\nbHNvdXRoLmNsb3VkYXBwLmF6dXJlLmNvbYIuYXJjaGl0ZWNoLWs4cy5jYW5hZGFj\nZW50cmFsLmNsb3VkYXBwLmF6dXJlLmNvbYIrYXJjaGl0ZWNoLWs4cy5jYW5hZGFl\nYXN0LmNsb3VkYXBwLmF6dXJlLmNvbYItYXJjaGl0ZWNoLWs4cy5jZW50cmFsaW5k\naWEuY2xvdWRhcHAuYXp1cmUuY29tgiphcmNoaXRlY2gtazhzLmNlbnRyYWx1cy5j\nbG91ZGFwcC5henVyZS5jb22CLmFyY2hpdGVjaC1rOHMuY2VudHJhbHVzZXVhcC5j\nbG91ZGFwcC5henVyZS5jb22CMWFyY2hpdGVjaC1rOHMuY2hpbmFlYXN0LmNsb3Vk\nYXBwLmNoaW5hY2xvdWRhcGkuY26CMmFyY2hpdGVjaC1rOHMuY2hpbmFub3J0aC5j\nbG91ZGFwcC5jaGluYWNsb3VkYXBpLmNugilhcmNoaXRlY2gtazhzLmVhc3Rhc2lh\nLmNsb3VkYXBwLmF6dXJlLmNvbYInYXJjaGl0ZWNoLWs4cy5lYXN0dXMuY2xvdWRh\ncHAuYXp1cmUuY29tgihhcmNoaXRlY2gtazhzLmVhc3R1czIuY2xvdWRhcHAuYXp1\ncmUuY29tgixhcmNoaXRlY2gtazhzLmVhc3R1czJldWFwLmNsb3VkYXBwLmF6dXJl\nLmNvbYIqYXJjaGl0ZWNoLWs4cy5qYXBhbmVhc3QuY2xvdWRhcHAuYXp1cmUuY29t\ngiphcmNoaXRlY2gtazhzLmphcGFud2VzdC5jbG91ZGFwcC5henVyZS5jb22CLWFy\nY2hpdGVjaC1rOHMua29yZWFjZW50cmFsLmNsb3VkYXBwLmF6dXJlLmNvbYIrYXJj\naGl0ZWNoLWs4cy5rb3JlYXNvdXRoLmNsb3VkYXBwLmF6dXJlLmNvbYIvYXJjaGl0\nZWNoLWs4cy5ub3J0aGNlbnRyYWx1cy5jbG91ZGFwcC5henVyZS5jb22CLGFyY2hp\ndGVjaC1rOHMubm9ydGhldXJvcGUuY2xvdWRhcHAuYXp1cmUuY29tgi9hcmNoaXRl\nY2gtazhzLnNvdXRoY2VudHJhbHVzLmNsb3VkYXBwLmF6dXJlLmNvbYIuYXJjaGl0\nZWNoLWs4cy5zb3V0aGVhc3Rhc2lhLmNsb3VkYXBwLmF6dXJlLmNvbYIrYXJjaGl0\nZWNoLWs4cy5zb3V0aGluZGlhLmNsb3VkYXBwLmF6dXJlLmNvbYIoYXJjaGl0ZWNo\nLWs4cy51a3NvdXRoLmNsb3VkYXBwLmF6dXJlLmNvbYInYXJjaGl0ZWNoLWs4cy51\na3dlc3QuY2xvdWRhcHAuYXp1cmUuY29tgi5hcmNoaXRlY2gtazhzLndlc3RjZW50\ncmFsdXMuY2xvdWRhcHAuYXp1cmUuY29tgithcmNoaXRlY2gtazhzLndlc3RldXJv\ncGUuY2xvdWRhcHAuYXp1cmUuY29tgiphcmNoaXRlY2gtazhzLndlc3RpbmRpYS5j\nbG91ZGFwcC5henVyZS5jb22CJ2FyY2hpdGVjaC1rOHMud2VzdHVzLmNsb3VkYXBw\nLmF6dXJlLmNvbYIoYXJjaGl0ZWNoLWs4cy53ZXN0dXMyLmNsb3VkYXBwLmF6dXJl\nLmNvbYIxYXJjaGl0ZWNoLWs4cy5jaGluYWVhc3QuY2xvdWRhcHAuY2hpbmFjbG91\nZGFwaS5jboIyYXJjaGl0ZWNoLWs4cy5jaGluYW5vcnRoLmNsb3VkYXBwLmNoaW5h\nY2xvdWRhcGkuY26CN2FyY2hpdGVjaC1rOHMuZ2VybWFueWNlbnRyYWwuY2xvdWRh\ncHAubWljcm9zb2Z0YXp1cmUuZGWCOWFyY2hpdGVjaC1rOHMuZ2VybWFueW5vcnRo\nZWFzdC5jbG91ZGFwcC5taWNyb3NvZnRhenVyZS5kZYI2YXJjaGl0ZWNoLWs4cy51\nc2dvdnZpcmdpbmlhLmNsb3VkYXBwLnVzZ292Y2xvdWRhcGkubmV0gjJhcmNoaXRl\nY2gtazhzLnVzZ292aW93YS5jbG91ZGFwcC51c2dvdmNsb3VkYXBpLm5ldII1YXJj\naGl0ZWNoLWs4cy51c2dvdmFyaXpvbmEuY2xvdWRhcHAudXNnb3ZjbG91ZGFwaS5u\nZXSCM2FyY2hpdGVjaC1rOHMudXNnb3Z0ZXhhcy5jbG91ZGFwcC51c2dvdmNsb3Vk\nYXBpLm5ldIIuYXJjaGl0ZWNoLWs4cy5mcmFuY2VjZW50cmFsLmNsb3VkYXBwLmF6\ndXJlLmNvbYIKa3ViZXJuZXRlc4ISa3ViZXJuZXRlcy5kZWZhdWx0ghZrdWJlcm5l\ndGVzLmRlZmF1bHQuc3ZjgiRrdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIu\nbG9jYWyCFmt1YmVybmV0ZXMua3ViZS1zeXN0ZW2CGmt1YmVybmV0ZXMua3ViZS1z\neXN0ZW0uc3ZjgihrdWJlcm5ldGVzLmt1YmUtc3lzdGVtLnN2Yy5jbHVzdGVyLmxv\nY2FshwQK//8FhwQK//8PhwQKAAABMA0GCSqGSIb3DQEBCwUAA4ICAQC5PVSXPylh\nhc6YTutoOI0fbrjEZaCIzKbqfRmNJEMS4rZuOfprMAVFZtq7RqRu/k1T02vUbWnr\nLzQ5vDOZUnP2UFBWO4242l1Ulg15yzK5OIYrGCoENtGgG3+XYFDuzTplEMA1H2Cg\n67Fz7zZAihSqO9GudQ0BbjZ+jAGGmIu7WaCIX79aR3NGr3755fynVhsdqgMUiX/U\nLMiWsxs8LCc35BNTdu2slxxZzKJGjTILnQ120YagM1mzKAt9StVpTekCcTx8wHb+\nV5wlE5wh7Y2fFLZcCbzuc6Zu/qiygxnTKTsUAcRVa5HHrkyBOiYboLzKZRrZM6Fj\nfZzfpZ83ifD8thkCPYvJyNhD5fmlYn2amPdqmqePOTvkPtQRslKzfG8sJCAlgY0q\neUv8Sj+8MWs+SfYLxTlCyO4kostE8cQhsSHVGEEIUBD7LNkXyK+DHWKIE+rBju60\n3aeEU82ay1xk6w/jUMkGgsjZnBtzdHA8Dxu5IYuXLZ4hyukHy97fneaB0CaL+exh\nQCJosqbAZqqG/MxIG4RRYuvKFX/xc0qoCOL+AVrBOEM4Gy2697QyeMuSZQ/15JNM\n+1FmtGeinAncuE2+H9j2jX7sRM+dLk2PWLB0fNXSh442MKrf3pGNBEUbMSbfZq+L\nZyMTH6bzL4k33SfLhXCzM7Sp76MvOQJdWg==\n-----END CERTIFICATE-----\n",
    "apiServerPrivateKey": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",  
    "apiVersionDefault": "2016-03-30",
    "apiVersionLinkDefault": "2015-01-01",
    "apiVersionStorage": "2015-06-15",
    "apiVersionStorageManagedDisks": "2016-04-30-preview",
    "caCertificate": "-----BEGIN CERTIFICATE-----\nMIIExzCCAq+gAwIBAgIQYOKxA+80z6SSI8pq9m0/AjANBgkqhkiG9w0BAQsFADAN\nMQswCQYDVQQDEwJjYTAeFw0xODA0MTkxNzQ3MTRaFw0yMDA0MTgxNzQ3MTRaMA0x\nCzAJBgNVBAMTAmNhMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvn3Z\nWOU7gMwc4CisxtXo6andV7xUu7BtBDLztZoW4Bp29KSyMIUkuMnZ5oU1aoiTRb0m\nM+yVLwmC8hCXe1ahbUtSx5dP57jvRp2kMgXYR/GLnWBCZ0n+isM0vm9m7nWOvYU0\nSN+9GzcDzIRd7zRar5Y14FOarUkS9MlnH3pc0FRgKhi97gatFneOJeXSl1Ni5sxp\nDOyLjvWVFjw1/IkkoQKU3+JARfiIQklHq+XByx+dLB7G1gzy8RgBISOqcCTUX0PB\n+PTAPn8XRFR2h6hJUf9em1k113gc+MzAzVeq4GLYcytf4tBY6PokkKwK6bRq2wcQ\nNmOHhHTEJ07w/5bN6dK+D5fJDw7ySG5CtaC9Vuuv8rjNCx/EZRc9l6rc1QSnAynk\nbREsU6h3TVGqVaALa+E9oD1qR0xFlB48PVWoZ72txCND3p1491o7ZQLEjcsOkIe/\nakMUrXexY+6B4pT9LSOY+ujYpMjXNnPL9Vk5KgCmmiDArdLbDHgc3wzz69MKv6Il\nKh9Azyr4+EcFZe5OO0Tg7DR/3sf6ZJOm2iNCK0ED/Ov+jgVLzBJje0n2uyCcMj6K\niNHz4xjBp3oYDTicn5TpzHSeb28uk8Jjxd/GySNciArPLcUgdXs3V5hovTA+uRZu\n2X2UvnuFpEch6NckLa91R0R4ivmyWpFDSM+1XS0CAwEAAaMjMCEwDgYDVR0PAQH/\nBAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggIBADwVm04g\ne5bowW5TieAXgxNTEfMZnk7MmZEE6cgiBVk8qMJGi4Wkc7HbWCFMwEPHC6abcYQu\njVAKCFzfaoIe4z6gdLgEYCQHvsACKQZ2wDCQRV8eF4E9sdRL+VsUlvSVA0iR3zIC\nqlt+YbH/oY1/9iDrxJEOQQvXk3JFLh6hb4ZNms9tCVWvU0pOQCUfPGRTzqHf/ANE\n+QxrcPe9h56FYZf6nI4Jriv53uc6+cALNpuk74voZnoEqQKw5MOCcvemyn2et8sc\nPanfoHlyB7xT5O67PsFliec2FoZSfnNxletP7GRMin+71JlgCby7rg08V7cXMCM7\nKq8L5/cZfr/CzXCHQIRx5pT9s6WeF3vmxY6kmELJ8zlrq2XWKm5JQCqAjbP9wP/W\nnB0J53WFgSIEUE9hqUCcfA3jhuIeqpZwfcsPuu4tvubcZVcPSp69V9OTjzdyaCJf\nfICxmgg4T2fQU//wQc96RCnW6DjrGKur0pdZlC1Uzb504GxND5cCY1LS3iaU3l/A\neQ0T3yuLWFGw6E+/aAdbRJafus3zc3GLA1zJgzEvewDWuYwZRCNUxCe/pGORibNI\nNNysAG0Lf+6qqf0lTEL4Ee2CB8evrhi1JbWbj73HX8bnMIlS6ZfdCeN9k9ItgveC\nuOC8td9A+lNMgV3jjACRNvHDfzdSgtUeG1Cg\n-----END CERTIFICATE-----\n",
    "caPrivateKey": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
    "clientCertificate": "-----BEGIN CERTIFICATE-----\nMIIE9jCCAt6gAwIBAgIQCbv532ukpKx8Q4cRFP5SRzANBgkqhkiG9w0BAQsFADAN\nMQswCQYDVQQDEwJjYTAeFw0xODA0MTkxNzQ3MjBaFw0yMDA0MTgxNzQ3MjBaMCox\nFzAVBgNVBAoTDnN5c3RlbTptYXN0ZXJzMQ8wDQYDVQQDEwZjbGllbnQwggIiMA0G\nCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDHnm7mEUued8Wbppyzy7nsuEqf3iEe\nda3yJniLMMFSG8hC7IKx66P0PAuHQxr/qLnVGEcNX7w1UZH5W/K51sHBUxFIvjZ0\ne9dp75qcjukpcR7DKY1WiHoRQOFV3zjaaFsRDnA70JGQIMtMZmXBHwqcsTY1s0w3\nuAafsDt+YOcT9wES3oXzFkr83h0jPWbi0D4UAONr8cdmnrz4c7VzZ1nGC+A+eFz2\npE5dJdr7fEMfDrsi6L0r31ENoB1NAzkcDSxSvizXEecnacyjDqTGAC4rmPdGMBgc\nf0LhEwB4FuRqo2ZDEPh/njeHuroZEC5FOadnuA2/As3dPIQIJTjY3RP86itvCqvu\nQCgV14Pa1FBQyc5uLcrmsMdF6lW7OmVb1Cr1Zw/Epad/Pw3xShQv1FrAqG3UwTAS\ngMa3LernQK6R03pD8VSU1M9ITPjyrc3MS3vl+6p9pcZYLXRHL6zamF8drZfoTpZd\nYhvwmJu88l/z/QzxuVfra1G4gWtrSI+cPVm+d9NNGNR5c6SSGGpi0Cbglq4GiP5P\nTYOajX4f0nln/YRGmOykNdLUsI+LjPd4V8GI9W9HtD/hgvjUuu9QpdNyWv4xmCYG\njGzl5q8yOOQSykz3xikF4PyG1hHTC9jgDTawyR+8hL7z+0gIWI9LrPBt+JTPGZBY\nUzhib2HIdCDsEQIDAQABozUwMzAOBgNVHQ8BAf8EBAMCBaAwEwYDVR0lBAwwCgYI\nKwYBBQUHAwIwDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAgEAeyxOfmf0\n399MLTvvqzH4hWtNxh4rIzVhFhpmKgP5OrynPbyr4zDn+otMRJaVWDJsBfsrvKt0\nPuIgS1k2B7PVhUTcKG4EB9EJgDUvoLssRSqdQlfVw+BBonkLnY3Npz7XcZDaloic\nXtJW0veugYk3rVqosEHRrn6jFeKHZtozxcI49izZp6MB6wJzDe9fkJ5vgqIYwO6Y\nrrVTFZInTLhPGZTa4chLR+VyBb2jUl4Y9RzSlI1N9jnqgwinBTxqtIkjXHcLdrZc\nH6k3WqjizWy/7zEnwzI8W1IdnoMqpbt2tUHq1CQ53st3sQHDYBXceyrmKgtLqbVo\n7yuC/9BCrf9uGfNoedVytlzTSuniDlupftlcKeJSSacFdYQtfRcmWEFGne8Ij2R1\nDlx6GJ1o9cEBqzx5ls55t0/uX7DVodJlGFB7mxyB9LgPo7ZCEKdvFHMXnscRjoqJ\nPjN0Tgrt8Q9GT3CNREsz+D+A1SxwlA84G9kp2vhfgVxC5/ijmxuX02gsY23OG6mQ\nPgQ54eCoUTjN/Ky7UdcFHtt/b4G5LD4WH8s9D3kTSDhP4uEzzPyPSUjjcFB/WFaY\nCliGFTJhbRLY7mjF/i16voQCMyLgTvCgOANmhTBUAMtMg6A2dWp1avSBPIY9zusg\n3D+PZG1QFki+ExXIm765XgnRoBnVAzV9F7o=\n-----END CERTIFICATE-----\n",
    "clientPrivateKey": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
    "cloudProviderBackoff": "[parameters('cloudProviderBackoff')]",
    "cloudProviderBackoffDuration": "[parameters('cloudProviderBackoffDuration')]",
    "cloudProviderBackoffExponent": "[parameters('cloudProviderBackoffExponent')]",
    "cloudProviderBackoffJitter": "[parameters('cloudProviderBackoffJitter')]",
    "cloudProviderBackoffRetries": "[parameters('cloudProviderBackoffRetries')]",
    "cloudProviderRatelimit": "[parameters('cloudProviderRatelimit')]",
    "cloudProviderRatelimitBucket": "[parameters('cloudProviderRatelimitBucket')]",
    "cloudProviderRatelimitQPS": "[parameters('cloudProviderRatelimitQPS')]",
    "cniPluginsURL": "[parameters('cniPluginsURL')]",
    "containerRuntime": "[parameters('containerRuntime')]",
    "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "dataStorageAccountPrefixSeed": 97,
    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
    "dockerEngineDownloadRepo": "[parameters('dockerEngineDownloadRepo')]",
    "dockerEngineVersion": "[parameters('dockerEngineVersion')]",
    "etcdCaFilepath": "/etc/kubernetes/certs/ca.crt",
    "etcdClientCertFilepath": "/etc/kubernetes/certs/etcdclient.crt",
    "etcdClientKeyFilepath": "/etc/kubernetes/certs/etcdclient.key",
    "etcdDiskSizeGB": "[parameters('etcdDiskSizeGB')]",
    "etcdDownloadURLBase": "[parameters('etcdDownloadURLBase')]",
    "etcdPeerCertFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.crt",
      "/etc/kubernetes/certs/etcdpeer1.crt",
      "/etc/kubernetes/certs/etcdpeer2.crt",
      "/etc/kubernetes/certs/etcdpeer3.crt",
      "/etc/kubernetes/certs/etcdpeer4.crt"
    ],
    "etcdPeerKeyFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.key",
      "/etc/kubernetes/certs/etcdpeer1.key",
      "/etc/kubernetes/certs/etcdpeer2.key",
      "/etc/kubernetes/certs/etcdpeer3.key",
      "/etc/kubernetes/certs/etcdpeer4.key"
    ],
    "etcdServerCertificate": "-----BEGIN CERTIFICATE-----\nMIIFDzCCAvegAwIBAgIRAPlB7xsf8BeBuGMhHLUyjJQwDQYJKoZIhvcNAQELBQAw\nDTELMAkGA1UEAxMCY2EwHhcNMTgwNDE5MTc0NzIwWhcNMjAwNDE4MTc0NzIwWjAV\nMRMwEQYDVQQDEwpldGNkc2VydmVyMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\nCgKCAgEA0vrCfpQ86VVjhUFyV+9qcOcTKFdMqrzTSR06p1H72dHf9Pst/p9ys6kS\nqmfGlLF06HV390PcvDIQymaz/3R1j2Euzpftfd24rU0FEdrYwhAuBZxcEXaOcX25\nJTg9gcAexhgSNLeAKcnRb9vX7/yX7feucqMx+AyLxMrMJmPGwd6Gcl3WIjH2bIUh\n5yeqe14lxFJXXqXlj+hzIYVpZybqi8tqKvdL3NLzRQfrp8n03ssPTobRtT0UExEl\ntJxpAqzMW8oKc/L09lCYQT506aVCtquBLa5GS/+QSBpnhShPrHLF674HPo7rAHFZ\nINMGMM/Uvv7x+jEotEmbVTZvA9J4D6GYPlEh/+0SGZbqVfSSnYVX82yJEa7q8eR9\nyNE0py7iXUwWAXqrZdOSgZsXFuPN9YSkInJ2k1ZTB52gp4O64XcUG1DW95BW8y+v\nBhMncETgKP0QKgvIGV56Zb2ZZ6b+5ncjd+XgmL3E2cqZgRMV9gW9eOFNQjnAeKWt\nJCNfFcSWPZnzXFCPY/vkPWOBjncGKQnb1ui1k8KFjvVqcwJqx6N9GKri9+bLYtsS\n1QhlV9c81LQYU//i4ChgIEBGAdgT707LTAIwrGhdEKDyxmxxb6hZ9UhAVXrl7mvw\npBReE7X4X6QcjlpK9EezjyCkGYG7RgLlb8+dDEuCEiCpSduhsQkCAwEAAaNiMGAw\nDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAM\nBgNVHRMBAf8EAjAAMCEGA1UdEQQaMBiHBAr//wWHBAr//w+HBAoAAAGHBH8AAAEw\nDQYJKoZIhvcNAQELBQADggIBAL3/xcfR0T+6gFy5TIOHwO7sjLDEQLBNvXYjBlan\nIgyPe9r2PGvr4vWAKiInriKdCAlKg02PwGojk6OQ3fbuqKOIXywIySn8aAPwCYoN\naAOSiUOC+Ei89lCkzj9NL6Q9kLK6ROZPYlJ4uoqvqk1Rbsij1eLcAEFZYS1wphSV\ndSHLcxHkl+HQbfpk53G+4x7NJwhxEQTjdMiEBOFEKsGzQB1NLkiuV1KoRSRXTW4a\nZkw1DWiethdEcv86eo8EuBHLlm0kk8gwdHI4Ct/aB1uzvScAyL36INLtSBhr0D4l\nBDN5+QZl/cjxKxlOD05z95AHJvVyERrT/fgHOKjvg5NQyQaAsKU96Xi25cQZQ68F\nZjDJrNe/YZEOFPT3OxJ1wg2i4fRRSOqwrTa9H1ke9BywSQgRmfh3whoi920kPRBP\n7WAyjnnXivpIR/qJaZ0N7ggwIpQhE7efQPbNrD38Nq9sd+W6Vst22XiEpy5QERWJ\nZSJ4AiTN4+FwLhMmN92HSlMDbCt6Aa4sDTZDuALSDwzkAgfeRTileu3p9yrXdY/g\n1EJBXtR3cFHjb2o678PLGkGxiRlbRyGK7eGiOVBnbISeP0YDaUIP58JgXzp+Bza1\nI/ZVulx1xGwpe/ToekU3hcZTgv97ASoxi9GWs4SNM31Vy+Zao6O8zv5Xt6QVfhqH\nlonb\n-----END CERTIFICATE-----\n",
    "etcdServerPrivateKey": "-----BEGIN RSA PRIVATE KEY-----\nMIIJKQIBAAKCAgEA0vrCfpQ86VVjhUFyV+9qcOcTKFdMqrzTSR06p1H72dHf9Pst\n/p9ys6kSqmfGlLF06HV390PcvDIQymaz/3R1j2Euzpftfd24rU0FEdrYwhAuBZxc\nEXaOcX25JTg9gcAexhgSNLeAKcnRb9vX7/yX7feucqMx+AyLxMrMJmPGwd6Gcl3W\nIjH2bIUh5yeqe14lxFJXXqXlj+hzIYVpZybqi8tqKvdL3NLzRQfrp8n03ssPTobR\ntT0UExEltJxpAqzMW8oKc/L09lCYQT506aVCtquBLa5GS/+QSBpnhShPrHLF674H\nPo7rAHFZINMGMM/Uvv7x+jEotEmbVTZvA9J4D6GYPlEh/+0SGZbqVfSSnYVX82yJ\nEa7q8eR9yNE0py7iXUwWAXqrZdOSgZsXFuPN9YSkInJ2k1ZTB52gp4O64XcUG1DW\n95BW8y+vBhMncETgKP0QKgvIGV56Zb2ZZ6b+5ncjd+XgmL3E2cqZgRMV9gW9eOFN\nQjnAeKWtJCNfFcSWPZnzXFCPY/vkPWOBjncGKQnb1ui1k8KFjvVqcwJqx6N9GKri\n9+bLYtsS1QhlV9c81LQYU//i4ChgIEBGAdgT707LTAIwrGhdEKDyxmxxb6hZ9UhA\nVXrl7mvwpBReE7X4X6QcjlpK9EezjyCkGYG7RgLlb8+dDEuCEiCpSduhsQkCAwEA\nAQKCAgEApySiEUW/O9u6DEfdHm0+FlP6iWsgAeO2P6Y4YXZB4D60/pA/0AjiBhNc\nBkRQvlwYElF9yRaqOS4wvyi+URMiT4TeYC1cqOqO9DygV5TZRGUtEKTfC7axAphn\npWT41WIu/yDyy3DUyEZq9gNk/2tNsekW+xru62SFFlLTiVZikBSKzvAoRM7wOuj+\nAvMZzMK5iN7y+LjVNT0ieNwItP/PsRBl+8QPBdLZh0bPGw6UQCz+42dLnBnXXYOo\nK33+c3ASNmXKAjHof3s6I/YnCTMztyQIIvh+GJdO5tCEUqms9SG4SxsxAg6XfrJN\nugN0VBdSpD211lA7vxjRRqDpMk37bnUmYMYSzEUhiHAFB9N5BucnfoDCbcIpt9di\n9l54uu6bHqnEr3bPS8QLMiGw5zj6/5sFNh4KgCVzeUoaS8VgV38bbwr6iTSYEqoC\n42gGFrtyZ8ghp0Vv1KB1cBJtlAF2z7R43UVb0HIcpH6AK3TutWF97yapN3PxSpIc\nrt5AOAMCHzNtcUnOzi5GVLIhd44bQoQ767N3OhFWCp5ZoAPLaCtQh1lVP9Dfus/I\neNHPA9ROb8y4eBW4pJO1NNTDsy20+w7rICXyLq+5reChUCjWvIyxBy7hclWY7li7\nZPcVQ//aASOGkZ1Xkz6gTwsYrLoi1nhYZIjMAWHkIFWWSeeUkEECggEBANUNFZiR\n11ueFDQL19ZYDa2Ov9pphf7+1dVSn/aksNXLeLbi0qHgFXH8K9gFPXZfeY03eTBy\nDQtcIMGJha0WOHSYtS6fotYe/WP9L/IT6NrzBLSV5QaqwnC17rRq7u1Zp/1diib4\nyVfuANPx5L9GBw4/EiAgqXYeei6zvamcmTKZMQ9Hp99EpWE14NiGi+xWOSupogKY\nJN9oAB1F6a1qP+vpcEVWln6cWtTKNqtGozpDaz9dsLfWCtnp39ndet3ZuQuNb8+x\n/UychtNoBWkHh4mZuJlel6MX/y7C4+bks1Yccu1WPUou01vNkUG9Os/6FtcjviKC\n6wX6lliJqyJ4+M8CggEBAP2CxHfvIZYyjcfIXVYocd0UWzZKO5cxU4OOzzoacqS3\nNkoUXsFy3WvPBuMBZWjYUCcM9hTPcK1SvJYYwopL2EST8Ww/Rz3NQ6aCg8rhhLlS\n+TxcX34E1XfGwAy+QeajgLAqWQuzPYoQe+WDMWfM4oBGEgDgZdCbS66Oa3iAgNB/\nrlGmPPdn0NekK4KWdJ6h+GQAlbNftqKpSw49objSPcNyRiEWjT1tYE43OGLrUeeX\n9jh+qEKulkp4GlNahkKwCAN3sQnvAFs3wPm5iD2uCqhE6XQ5OaqfmzZYmYJPWh3q\nl+sy7HVH/SdJFvsHGPsLz9DhWDVX7hT7/nSf5g0G/qcCggEAWU+H2xJgFg75ZywD\nyd3VtgjeUh/kRRXs6+UcG5fEbYtDSl9hbuxx8PuGIaNotYOmf9VeXzmgUD/Jl3gf\n6oQjHHWbljTjXSFWlaDghXllJsuzEES54oaYxgjuTQF6sVLhQiwBKv8l4E9sV2zS\nuIARmx5DaeZnQ5XZIFTG0CBOdFCVqVMfg0/SiCK+4+XbKDKo+q28tZuz8Vc2nQ7e\nu4yLyUhtgROgOOkwhn1SV5BgAp+aiNCssRPwLpOE/F6FEBUiJj6fPZDen0wKlPrJ\nMdMvNTaUlO57YKpBlgeq4/LBXvrEDswVG1Dv108gck9yJRcwlfVs0ijRfwsiFXF4\npRXTLwKCAQEA2Uj39IQ2GXKDKzWFKo/H6GHGPCYsJU7V8fC5lWeN07hlA+Gpxc0a\nE4mCsZdEwDSHnrDxSqzyOtyrX0shkz+mwkC7sLgb69C/pzw+kenxxJZloWLbRjwG\na38ipMl92p1Rc60YXXrnyCqQxwtHkVx+1ss4KyAqpD43BAp1+vbJceu+EaWWo8eL\nrQi9clRa6IyTRcNqjDABbjIEbtRMhQlOfvK3QSz/KiNRZDjYT5C6xvHszEdjGKRj\nlLiUd9UjNo2CkNZKG+WKPKTw9hobuCIwaEGIh2F1F9VtR4txJ8uzxeiJBcLEAVIO\nnVl8JPTUaHibSsGaxT30hm/mjTdwCsJwCQKCAQB6j53ftbzT3FIJ3OPXGjWDMJqB\nm6x1eFxPdMBqvLWyTCu5KUDuTitK9lRWsAZ5slbNeeUpR7GQDKcg4S8vx+4M5kgC\n4fEFC+p430eznI7rghAqidfJLSRAZDSI5c+E2JDIHPFskpcKvkljqNhJ5S4mrF5l\nzcr+eoN2Lmob006o6S5e0kN1EaMgxeh5XqDcLE74H++O2b6cISZAP10M0APQgPoV\np5/nyd7XZtUKuvxkaDgsqmdXGg14duifsF7KvjTg/WJ8Jx+0VzkYlM/qb9bHhubO\nR5ocbXdqMzXZSuqjZz3HIQe5+sRwrWSf9/V6nKVLTrtQ5nRpI1dihxI02aHq\n-----END RSA PRIVATE KEY-----\n",
    "etcdClientCertificate": "-----BEGIN CERTIFICATE-----\nMIIFDjCCAvagAwIBAgIQdJB5SgQop54ApL/0mZ5jyzANBgkqhkiG9w0BAQsFADAN\nMQswCQYDVQQDEwJjYTAeFw0xODA0MTkxNzQ3MjBaFw0yMDA0MTgxNzQ3MjBaMBUx\nEzARBgNVBAMTCmV0Y2RjbGllbnQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK\nAoICAQDEsFNCMaYsnuV2CW+MR5N0eGx/HrspQlgIsz26rJe9RXA0QZk+0p9tTTPA\nYmMRpIhnaqeST6s58ntTRP/M0tfIXU9E/jwFP+DlnBz6zqbs0dYDXsrzZ05BW7Bj\neofkDbQP8fAwWJ6GC/tlRoz+7+1h26rBQ++KA9+7S32GxBllZUVWsVmPBaPMZRGI\n6JoHvbtjXvClZe+qwI161awCI0i6AGBseVl7xkNBAsNyREEP/VRX+9rTMck9wZqx\n90c+Rs5ebD9FaevhvgnrQfFS51PjF2QGAa0Fwdu6PK1SVLGS8SBYvL8kSaoQGVeV\ns8bZe0RyVxd7EH38FmZ4IGdbKcJ4ZHsF36hecwcXucUu+QpaL/HMU10m+h4XH48c\ntjhMR+CJHwwYb/8h2aIGBtrgr/O9dNf7TMB2ZrHo8DrUX2Gbt0xE2MiPUWL3o5OD\nqbw6p9GSjk5Q7y/UrN1foH3Q1eC1xEmnizTwnSdGwU7Fdu424mjkrrbMjLDklZ6P\nmDq+25G4jVtFwaiTUTtTEJ4hlm7LiDGBDn7Zeu1VymHpqklkt+Kk6xqsEt94/X3t\nW4kv60g98wOvxk9I998ctQ87CcGZ5vGxkDUhUFbILyXJWTfvQ2/FngV+hJFlCFVN\nGknTju7eA7H766KPbxqPIh6hk229RLqGQ2ddCZsriSVEUJaqKQIDAQABo2IwYDAO\nBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwG\nA1UdEwEB/wQCMAAwIQYDVR0RBBowGIcECv//BYcECv//D4cECgAAAYcEfwAAATAN\nBgkqhkiG9w0BAQsFAAOCAgEAKvx76fGgS/ESe4l82RJBv2IshhzhP7CclNRrNWJV\nYiPRJDctKwaKTW73SQdVeMcilsTcZRkpR6mbLeS9oqh9iE364CS3mRGS1bBoqfCB\nv7wIhzSJ+m8c9i6eXqkVF57shzus2KuFdr2iIVHXzpF8fEEZxd1jRWok6c64Gky+\nPun07R6t/al+8qh/IWQiVF/bM0LuZ5lSSNV8oO+cmPugJNSk8vME6GoqClF/6Z4j\nEsVB69cseeUbwNL70TgWTcTQIW5/+NiaYp+y+OoYfZmYKOU+1FrEroTMPp4WsedZ\n2/WNFE0GYY/g9gwOwKS/bSd88Vx8z4ur67Fh4pB0SZocSWLnsBd+jEazdu2+G3Q2\nce3xB7pcnBNipEDurWqhkifoZxcr0nNo15TP149QRcvKSypU2YiwN9W9wRAaROi5\nrrQxiGEPbLfdJbrjPHmRzjlsZyQyCak/IgtxuZ71XQIU+2RRmjh3lsSh9GUq7t4K\n/Wo2VL6IlAMCYpydZFfHVK+UMAB7JFZ56LNBpbtE42LrNZ+Sv+ucfsNCas6exthe\n0t/8a7QlYs0H7rt6vjU6f+7/lRoiiV/qUegC35ik8og0k5n+ptvBBlmOgSEOEw23\n2sPle0RTwYXdAgiSTuCoh5yyA6A+zu4bYINpc4df7RJoFtPDc6rLt2Vh/dl94rT8\nlWQ=\n-----END CERTIFICATE-----\n",
    "etcdClientPrivateKey": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
    "etcdPeerCertificates": [
        "-----BEGIN CERTIFICATE-----\nMIIFDDCCAvSgAwIBAgIQb6YTQ25mN9wLY+iMGM5jATANBgkqhkiG9w0BAQsFADAN\nMQswCQYDVQQDEwJjYTAeFw0xODA0MTkxNzQ3MjBaFw0yMDA0MTgxNzQ3MjBaMBMx\nETAPBgNVBAMTCGV0Y2RwZWVyMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKC\nAgEAwuVq28bFIkom2yRaVE+KXXIB9ZPCGqaduQCTjjNyk4enOI1RmY7mbo5hjUDi\nDm6FmWs6m3GlNjFhCSz5eew8mrVszT4FS/fUVGNlGWsI3LhYtccaQjXMItjbUfrO\nKbQF9WZqLc/eGd/JiVWt2RteUZQh8ZcOE/Qivyls95L0lYr7In8QkccaB6nnKniF\nXswIlVVZBWLDV4alKszL54veR1IvLRFUmXmjOT7kTivrgth3NWAigMDGX/taqcQ/\n7TELkskN+f0uS27tPLsTrmj93cRne0eAyQHgPezUqvdfZ4GRWGdltdLMOWP0G28U\n4bSHgFnAEz55dT5X21NP2yssmSnJuLv/8C6qYEefCl7ey6KMq6sBLUArJ298Akwk\nhVn0LiRpatJVviaIic4fwA4QpuF+aG+biDeNDztma4/vZ0cTjP6JWZ5YmDLtg3eb\nCVoVZqrGrk29kO9qUs7/uS8GZy4FPGy7Gn0qEZIAfhZef+cfMeZ2eWqqOcZpfP9U\n6lVZJdHs1NsxSNAv+JmTkf380MPxNujaP8o80KjUaztsZ4c5J8wQoBw9uIQp3AdH\n5BW6QS7XVnRlZwppSQBZ2aqzSJYUCNDVoVOtAhRWl6yh685rx/gIF+OY6czXwkC9\ncl5l0oL+kzDiYdPTeFw4fXmEIfFatSZpyartcU6yMsxxCNMCAwEAAaNiMGAwDgYD\nVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNV\nHRMBAf8EAjAAMCEGA1UdEQQaMBiHBAr//wWHBAr//w+HBAoAAAGHBH8AAAEwDQYJ\nKoZIhvcNAQELBQADggIBADSTvEsrX+0sqNt6iHwvbTuk0kb4M/ffCMVKnyhbKkQ2\nttEvSdhhAwE8+VbkFjX1Sgl0E16r3dzcK6kDanjgpqSNzF/pKqKbiMBRzhYYfAkX\ncb6ZEAoY4z7AeWoOEnAfgC5gtt6PGN+KeAeaaDOvXH4K3HtwBUvz4HUTPHPtAhY/\nEHz7lkykKXdb5vs/srD4hpfCZToRHpZDU3mZSf4JuRrWTE8RdIKSh28Jx2Anp51I\novFldfixLhmlYs6H3ilkU95o3e1IGhbtFr/6DhzKdTKHwkzxcbTC1JrNBS4xdGTx\n8gxaLpg4HlZw06MTicExfVQSI0klt+2DZcMXiBzd81xoEi4ECv4A0IQvm8aWOQys\n+jG1aTMvQNgAbxQm8euwzKSVThY9SvmGk7WKl01pRWuPTaAp3gT+DauqUZ5chW2v\n6T5n9AhA4KoBrCuJoKXY5B9JVhLDEfsDZdI7naWeDKfmrTp2loQWs6rajAh+avk5\neahgK2VAuYgk4ujFRFXL9FZKJAB4qT3ug46W+vxAL5+Z7OP7jZv2204c6ZwmIeqk\ntfvC8PmfnbBthtntlnRVS4I4rGMKXWl3ChMJumAI1wJDkqlEr6BJNIxMTiPCoG9q\nDmHhkeUrRqW1EdM4y9qIAzOELuXfgtKLoq+prheAaB1tMtizrbs36h+bcaN9Bmgf\n-----END CERTIFICATE-----\n"
    ],
    "etcdPeerPrivateKeys": [
        "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n"
    ],
    "etcdServerCertFilepath": "/etc/kubernetes/certs/etcdserver.crt",
    "etcdServerKeyFilepath": "/etc/kubernetes/certs/etcdserver.key",
    "etcdVersion": "[parameters('etcdVersion')]",
    "fqdnEndpointSuffix": "[parameters('fqdnEndpointSuffix')]",
    "gcHighThreshold": "[parameters('gcHighThreshold')]",
    "gcLowThreshold": "[parameters('gcLowThreshold')]",
    "generateProxyCertsScript": "H4sIAAAAAAAA/5RWf2/iRhD935/iHaAjSOfYJnf5QUR7yHF1UdIkNVRq1FTWYg94i3+Q3eUSdJfvXtmAYxPMXfNXPDvvzduZtyOa74wxT4wxk6Gm3bm3f9179sC7cu77jda38nevb6h4bsxF+rzU/YhTonSfHc5o+dLYAN1RCeWOaiC+UK+Q60vnZrRVr4jtIKgWXGXaQ/cN2h66u9C+FG/QFdVFbCc6V+6M7AvPdf740xmOvjiDC8ctYIOMad95r79i9EkoaQh6XJBUIbGAxGuH9AmPaFNorctZqdwKVemqjSahdhCtO12N7KGZ0XLDcnU69ApH2O7I++3y2rkbjL5khLWHvb5ByjdmizGJhBRJo1JlY4dX/JVzX8NcPtlLuzZJSVO92p+Vutap0fM8FQpZA+3RtefcXNzdXt6MhpuuVoK9fqjUXPYMw+qeHJqH5qHV6x6dnL00tnnsQS6jzLIO1akqWrfFtOlSmWoTq+Mi5QeV97Wtzlm3qaJvE/wJ1opSd3BzkZO1DuKZonje0bQmppSQYIog0lTBHmjpnBIpo+xASAY9XSi0yisJXfPjaZEm6BF6Qk/Qnz+ZZ9ADtpSwTrvHyEy8hayQuSPocjH+F23Dvunn07Zz2fagXRaWkWc326usWF516spiXpN3cNhDt6yLTaeCpkylwrjty6VUFPdiJhUJ2S7KrK6eF8vvf3JkQufJLmZ7UGmAPdjRJUnKkyQ4i2B2d2p0R5omSImlHwcen3gTxqOFoIMOvmGSCnBk1Q8kPcKCZXbOEaRofT7H32j9Cp0eYQL/4P17jAWxGb5/h4yI5jgys9SEzkF+mMJ5Jn+hKMBDo/X5oYEWh+IxyXO8aNqT4Iq83HSeSr2Ay1kmQAOA3IQqm5VCa99qxi9o1W6xGqpiL1XB5UW1F5k9oa2620WbcClOvxKeQq5IzplPmLMg4MkUTGFMU54k2Uc6gSUVIp5QDpQUQOdoW9J4kIbR3nO7OgF77+SHcRrg2DRrs3ZPxnviKvRyzxRDKpxioYsjfMQnHOMEpziDZcKyYHUzN+S52d8O2uLsR8b6lGdm1soENjGOUn+GRaJ4BBZF+azAJQSxYLnL28U0/WiRPT89JBapUGvidzZbnWJGS/kBmzEhIpb/V5rhmHy2kOv0pzRpKzDfp7kCw1cWQYWb6UpkHQNDW2/jIFzOQ0o67zQ+KYTEsx9Yu4HWgc8USj/OXjqNc6iQkopBC6ZXZ7/BFkvrpdPYB87NXYNeCVj5tDSV/XbRmricZJrziquCfhrHLAmQzYaCD6u2xcQSmSdmO41F+ShBz1wqqVEk6f8WnnDtvwAAAP//n9xaaCkLAAA=",
    "generatorCode": "[parameters('generatorCode')]",
    "kubeClusterCidr": "[parameters('kubeClusterCidr')]",
    "kubeConfigCertificate": "-----BEGIN CERTIFICATE-----\nMIIE9zCCAt+gAwIBAgIRALxeO+ChBm++bL+7VZv2cEQwDQYJKoZIhvcNAQELBQAw\nDTELMAkGA1UEAxMCY2EwHhcNMTgwNDE5MTc0NzIwWhcNMjAwNDE4MTc0NzIwWjAq\nMRcwFQYDVQQKEw5zeXN0ZW06bWFzdGVyczEPMA0GA1UEAxMGY2xpZW50MIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAy3bRWo0ncRH1khaVto7Sl63kA3qt\ncGAPaBILagBfpb4WeGMu3LaWQKfM/5GYpymc2oJ8RoXlSR+8pmH+NSfrfHih8in0\nGOLG/ebgCLQwLk5wFln1UvcJBIofzW1Ys2Fs+GskuUBKfO4xAKzMRjA6KOsI8/xf\nsbXEi5IvLSyXKurO1ns3ePTF6KWPjvsl2FbECBIAyHViuHCUwWDg9yV7slx0jIAj\n4Wuu3E7rw5tIeflmKbQznhVYnWDv6gF+5wWfzSIl6d5gKgURaOc78rn6llq3a/AK\na2JMSi84vDJxeu8sonGHyusCOrlCKgSB7jhNwdAsXMEMEEas53o+ptHdI+e/LAKu\nVyDYVKagGC2vyDzpRU1WtuO71lMit3Gl92mj+dhvxsQSgW9Vze9fR2MSrCgbmBQ+\nP2/ajnQJ4rW9x+Jykfk+LnjzwTj9IsovNEL4Zrnm5RfJRmCZoEWSRJQREs9CiC3d\nI5SdKYIXDj6/iIwNUESA10ErL1p5ha5A6U5LNtlL6PexGtRLWhmaZD1e7oZf187/\n7u4hJzDZx2jG9KQHh0zrAIdUdLFb5bOqssFwFQR2cl2COTTLs61Bb9GiRIQ2Lo0Z\nOeCJo7fYF7yanWxW87IdiF9+BuH+wBs5sRzStsrO97Y7MmJy+Clf3Hh2aiomyYOu\nrBeMPyanK1zqk00CAwEAAaM1MDMwDgYDVR0PAQH/BAQDAgWgMBMGA1UdJQQMMAoG\nCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggIBAEFlwyrg\nymx8fjJd3PMWuexOSMO5RkOwwca8iQXHQEq8sOgqwujuqMCoTjwBAdJXYArxjAT7\nUsDzgW49v1fGni8y17vc40ssD8yvbd5F09zvh+XKJWFQssub1apvgFVq+NoZJZQy\nJhd7kDDqcgj86HizuDJcXK4wSdH3efXmPJ+N+OaUifDr5mkj+Dl09HhfB2+nQRu+\nXDgg5o1L+LtrJuAoIdF9lXVONUE7iPt26CiaknxWJae4gu/5Bcwjjai7FOIFpyiA\nT7p+Xzvyg7YI9UM1KlUX+hiB4M0x6pFQ2wte+iLZqBJDf1pFzh8uaPEVq6hsL2ha\n3Z48216liynRY7UIsFFEIZNfHsB7Tm+gdK3jA1BKFiNtMJ717NmDP4BzgwXS/tOG\nu12wNt+gikPnnBtaJpJIafdwnzr+CZhHhaPDoWXPHoL37I4hJckbFpTci06kFQGJ\nTooZ6PkF7L02WOv/R4XyJvWuy2e739BJFyzOzQFLEf4mKskryHQGeOc+cN0q9KK5\nCep1TRe+UvvWCpyaS9gV9+QJ2XBK4UENvUPqIkNJZsn0FWYe+1IdM7stQwH3wO9l\nC6OJS5wWfQZEReIQe6FWw/wSkiVCnlGgDPhMEpfU+W1WYZy5e6cNrf8oWzqK9OUn\nensg7iQH9AJ9vAJt++zDCVi6DawhX994rG9u\n-----END CERTIFICATE-----\n",
    "kubeConfigPrivateKey": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
    "kubeDNSServiceIP": "[parameters('kubeDNSServiceIP')]",
    "kubeServiceCidr": "[parameters('kubeServiceCidr')]",
    "kubernetesACIConnectorCPULimit": "[parameters('kubernetesACIConnectorCPULimit')]",
    "kubernetesACIConnectorCPURequests": "[parameters('kubernetesACIConnectorCPURequests')]",
    "kubernetesACIConnectorClientId": "[parameters('kubernetesACIConnectorClientId')]",
    "kubernetesACIConnectorClientKey": "[parameters('kubernetesACIConnectorClientKey')]",
    "kubernetesACIConnectorMemoryLimit": "[parameters('kubernetesACIConnectorMemoryLimit')]",
    "kubernetesACIConnectorMemoryRequests": "[parameters('kubernetesACIConnectorMemoryRequests')]",
    "kubernetesACIConnectorNodeName": "[parameters('kubernetesACIConnectorNodeName')]",
    "kubernetesACIConnectorOS": "[parameters('kubernetesACIConnectorOS')]",
    "kubernetesACIConnectorRegion": "[parameters('kubernetesACIConnectorRegion')]",
    "kubernetesACIConnectorResourceGroup": "[parameters('kubernetesACIConnectorResourceGroup')]",
    "kubernetesACIConnectorSpec": "[parameters('kubernetesACIConnectorSpec')]",
    "kubernetesACIConnectorSubscriptionId": "[parameters('kubernetesACIConnectorSubscriptionId')]",
    "kubernetesACIConnectorTaint": "[parameters('kubernetesACIConnectorTaint')]",
    "kubernetesACIConnectorTenantId": "[parameters('kubernetesACIConnectorTenantId')]",
    "kubernetesAPIServerIP": "[parameters('firstConsecutiveStaticIP')]",
    "kubernetesAddonManagerSpec": "[parameters('kubernetesAddonManagerSpec')]",
    "kubernetesAddonResizerSpec": "[parameters('kubernetesAddonResizerSpec')]",
    "kubernetesCcmImageSpec": "[parameters('kubernetesCcmImageSpec')]",
    "kubernetesDNSMasqSpec": "[parameters('kubernetesDNSMasqSpec')]",
    "kubernetesDashboardCPULimit": "[parameters('kubernetesDashboardCPULimit')]",
    "kubernetesDashboardCPURequests": "[parameters('kubernetesDashboardCPURequests')]",
    "kubernetesDashboardMemoryLimit": "[parameters('kubernetesDashboardMemoryLimit')]",
    "kubernetesDashboardMemoryRequests": "[parameters('kubernetesDashboardMemoryRequests')]",
    "kubernetesDashboardSpec": "[parameters('kubernetesDashboardSpec')]",
    "kubernetesExecHealthzSpec": "[parameters('kubernetesExecHealthzSpec')]",
    "kubernetesHeapsterSpec": "[parameters('kubernetesHeapsterSpec')]",
    "kubernetesHyperkubeSpec": "[parameters('kubernetesHyperkubeSpec')]",
    "kubernetesKubeDNSSpec": "[parameters('kubernetesKubeDNSSpec')]",
    "kubernetesNonMasqueradeCidr": "[parameters('kubernetesNonMasqueradeCidr')]",
    "kubernetesPodInfraContainerSpec": "[parameters('kubernetesPodInfraContainerSpec')]",
    "kubernetesReschedulerCPULimit": "[parameters('kubernetesReschedulerCPULimit')]",
    "kubernetesReschedulerCPURequests": "[parameters('kubernetesReschedulerCPURequests')]",
    "kubernetesReschedulerMemoryLimit": "[parameters('kubernetesReschedulerMemoryLimit')]",
    "kubernetesReschedulerMemoryRequests": "[parameters('kubernetesReschedulerMemoryRequests')]",
    "kubernetesReschedulerSpec": "[parameters('kubernetesReschedulerSpec')]",
    "kubernetesTillerCPULimit": "[parameters('kubernetesTillerCPULimit')]",
    "kubernetesTillerCPURequests": "[parameters('kubernetesTillerCPURequests')]",
    "kubernetesTillerMaxHistory": "[parameters('kubernetesTillerMaxHistory')]",
    "kubernetesTillerMemoryLimit": "[parameters('kubernetesTillerMemoryLimit')]",
    "kubernetesTillerMemoryRequests": "[parameters('kubernetesTillerMemoryRequests')]",
    "kubernetesTillerSpec": "[parameters('kubernetesTillerSpec')]",
    "labelResourceGroup": "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
    "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
    "locations": [
      "[resourceGroup().location]",
      "[parameters('location')]"
    ],
    "masterAvailabilitySet": "[concat('master-availabilityset-', variables('nameSuffix'))]",
    "masterCount": 1,
    "masterEtcdClientPort": 2379,
    "masterEtcdClientURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"
    ],
    "masterEtcdClusterStates": [
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"
    ],
    "masterEtcdPeerURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"
    ],
    "masterEtcdServerPort": 2380,
    "masterFirstAddrComment": "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
    "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
    "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
    "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
    "masterFqdnPrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
    "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
    "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
    "masterOffset": "[parameters('masterOffset')]",
    "masterPrivateIp": "[parameters('firstConsecutiveStaticIP')]",
    "masterPrivateIpAddrs": [
      "[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"
    ],
    "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', variables('nameSuffix'))]",
    "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
    "masterVMNames": [
      "[concat(variables('masterVMNamePrefix'), '0')]",
      "[concat(variables('masterVMNamePrefix'), '1')]",
      "[concat(variables('masterVMNamePrefix'), '2')]",
      "[concat(variables('masterVMNamePrefix'), '3')]",
      "[concat(variables('masterVMNamePrefix'), '4')]"
    ],
    "masterVMSize": "[parameters('masterVMSize')]",
    "maxPods": "[parameters('maxPods')]",
    "maxStorageAccountsPerAgent": "[div(variables('maxVMsPerPool'),variables('maxVMsPerStorageAccount'))]",
    "maxVMsPerPool": 100,
    "maxVMsPerStorageAccount": 20,
    "mountetcdScript": "H4sIAAAAAAAA/3RSUW8TPRB896+YL8nb14uTgioVKUWVACmCNhWEJ4Qqn713Z+LYx3ndpgX+O/IlTQ8J7uXkHe/M7HjH/8nSelmq2IgxrkLybH0NG2GCJzTUEayPTMogVCDWBiVplSLlc5lqNMxtfCVlmeo4dSp53bTKTD2x1C4kU1hvWf5fplrOz85PZ+cvxBgrrwncUM9gIyq7I3OCjlqnnhBy4R73lpv+2HMhc0E3ytcUn27n6tFFbblJ5VSHrbx8TB1JpWNBvraeZJuck2dn86mIxCh24s3y0/uFNHQno9Hi5vLjerlerq4Xkx8Z+TUXV6vP1+ub1fJ6vZB3qpPOljJnYGzciGToTpktIjE7EtuNsR2KFpPnLrHNieIn6o7+BGyFL5i8RkHfMcNXwQ15AQCkm4BRFsi5KNeRMg/oeciM9ld2ljETlRVjVNY5ZE+yiqxK0QuNnmaaj4bYUdPT3zQnxwCw/wZ+DxWVOOS/oUolx/HEh0pZd0Bnh//pCBcXQ+HeqW5Ib2ArtKpjyzb4PEjkKFzEs/a/XY4HnSZQhA+8p+hhGfMmx7qPrig83WOOSX7IAbzdVHFKO345UETxoV/s233nOxRv4dTjw61lVTq6zTu3mJ/0pW8hdV65Qy0Ptn/hQVS/AwAA//8o5bmvUwMAAA==",
    "nameSuffix": "[parameters('nameSuffix')]",
    "networkPolicy": "[parameters('networkPolicy')]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "nsgName": "[concat(variables('masterVMNamePrefix'), 'nsg')]",
    "orchestratorName": "[parameters('orchestratorName')]",
    "orchestratorNameVersionTag": "Kubernetes:1.9.3",
    "osImageOffer": "[parameters('osImageOffer')]",
    "osImagePublisher": "[parameters('osImagePublisher')]",
    "osImageSKU": "[parameters('osImageSKU')]",
    "osImageVersion": "[parameters('osImageVersion')]",
    "primaryAvailabilitySetName": "[concat('agentpool1-availabilitySet-',variables('nameSuffix'))]",
    "provisionScript": "",
    "provisionScriptParametersCommon": "[concat('TENANT_ID=',variables('tenantID'),' APISERVER_PUBLIC_KEY=',variables('apiserverCertificate'),' SUBSCRIPTION_ID=',variables('subscriptionId'),' RESOURCE_GROUP=',variables('resourceGroup'),' LOCATION=',variables('location'),' SUBNET=',variables('subnetName'),' NETWORK_SECURITY_GROUP=',variables('nsgName'),' VIRTUAL_NETWORK=',variables('virtualNetworkName'),' VIRTUAL_NETWORK_RESOURCE_GROUP=',variables('virtualNetworkResourceGroupName'),' ROUTE_TABLE=',variables('routeTableName'),' PRIMARY_AVAILABILITY_SET=',variables('primaryAvailabilitySetName'),' SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),variables('servicePrincipalClientSecret'),variables('singleQuote'),' KUBELET_PRIVATE_KEY=',variables('clientPrivateKey'),' TARGET_ENVIRONMENT=',variables('targetEnvironment'),' NETWORK_POLICY=',variables('networkPolicy'),' FQDNSuffix=',variables('fqdnEndpointSuffix'),' VNET_CNI_PLUGINS_URL=',variables('vnetCniLinuxPluginsURL'),' CNI_PLUGINS_URL=',variables('cniPluginsURL'),' MAX_PODS=',variables('maxPods'),' CLOUDPROVIDER_BACKOFF=',variables('cloudProviderBackoff'),' CLOUDPROVIDER_BACKOFF_RETRIES=',variables('cloudProviderBackoffRetries'),' CLOUDPROVIDER_BACKOFF_EXPONENT=',variables('cloudProviderBackoffExponent'),' CLOUDPROVIDER_BACKOFF_DURATION=',variables('cloudProviderBackoffDuration'),' CLOUDPROVIDER_BACKOFF_JITTER=',variables('cloudProviderBackoffJitter'),' CLOUDPROVIDER_RATELIMIT=',variables('cloudProviderRatelimit'),' CLOUDPROVIDER_RATELIMIT_QPS=',variables('cloudProviderRatelimitQPS'),' CLOUDPROVIDER_RATELIMIT_BUCKET=',variables('cloudProviderRatelimitBucket'),' USE_MANAGED_IDENTITY_EXTENSION=',variables('useManagedIdentityExtension'),' USE_INSTANCE_METADATA=',variables('useInstanceMetadata'),' CONTAINER_RUNTIME=',variables('containerRuntime'))]",
    "provisionScriptParametersMaster": "[concat('MASTER_NODE=true APISERVER_PRIVATE_KEY=',variables('apiServerPrivateKey'),' CA_CERTIFICATE=',variables('caCertificate'),' CA_PRIVATE_KEY=',variables('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',variables('kubeConfigCertificate'),' KUBECONFIG_KEY=',variables('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',variables('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',variables('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',variables('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',variables('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ADMINUSER=',variables('username'))]",
    "readerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
    "registerWithTaints": "node-role.kubernetes.io/master=true:NoSchedule",
    "resourceGroup": "[resourceGroup().name]",
    "routeTableID": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
    "routeTableName": "[concat(variables('masterVMNamePrefix'),'routetable')]",
    "scope": "[resourceGroup().id]",
    "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
    "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
    "singleQuote": "'",
    "sshKeyPath": "[concat('/home/',variables('username'),'/.ssh/authorized_keys')]",
    "sshNatPorts": [
      22,
      2201,
      2202,
      2203,
      2204
    ],
    "sshPublicKeyData": "[parameters('sshRSAPublicKey')]",
    "storageAccountBaseName": "[uniqueString(concat(variables('masterFqdnPrefix'),variables('location')))]",
    "storageAccountPrefixes": [
      "0",
      "6",
      "c",
      "i",
      "o",
      "u",
      "1",
      "7",
      "d",
      "j",
      "p",
      "v",
      "2",
      "8",
      "e",
      "k",
      "q",
      "w",
      "3",
      "9",
      "f",
      "l",
      "r",
      "x",
      "4",
      "a",
      "g",
      "m",
      "s",
      "y",
      "5",
      "b",
      "h",
      "n",
      "t",
      "z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "subnet": "[parameters('masterSubnet')]",
    "subnetName": "[concat(variables('orchestratorName'), '-subnet')]",
    "subscriptionId": "[subscription().subscriptionId]",
    "targetEnvironment": "[parameters('targetEnvironment')]",
    "tenantId": "[subscription().tenantId]",
    "truncatedResourceGroup": "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
    "useInstanceMetadata": "true",
    "useManagedIdentityExtension": "false",
    "username": "[parameters('linuxAdminUsername')]",
    "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
    "virtualNetworkResourceGroupName": "''",
    "vmSizesMap": {
      "Standard_A0": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A10": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A1_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A7": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A9": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_B1ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B1s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B2ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B2s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B4ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B8ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D15_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D16_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D1_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D32_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D32s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D3_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D5_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D5_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D64_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D64s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D8_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D8s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS1": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13-2_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13-4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14-4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14-8_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS15_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS1_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS5_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS5_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E16_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E2_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E2s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E32-16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E32-8s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E32_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E32s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E4_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E4s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E64-16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E64-32s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E64_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E64s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E8_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E8s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F16s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F16s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F1s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F2s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F2s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F32s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F4s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F4s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F64s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F72s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F8s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F8s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_G1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_GS1": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4-4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4-8": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5-16": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5-8": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_H16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16mr": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_L16s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L32s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L4s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L8s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128-32ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128-64ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64-16ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64-32ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC12s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC12s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24rs_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24rs_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC6s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC6s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND12s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND24rs": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND24s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND6s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NV12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV6": {
        "storageAccountType": "Standard_LRS"
      }
    },
    "vmsPerStorageAccount": 20,
    "vnetCidr": "[parameters('vnetCidr')]",
    "vnetCniLinuxPluginsURL": "[parameters('vnetCniLinuxPluginsURL')]",
    "vnetCniWindowsPluginsURL": "[parameters('vnetCniWindowsPluginsURL')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "vnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "primary": true,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpool1StorageAccountsCount')]",
        "name": "loop"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpool1VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpool1AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpool1AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpool1AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpool1VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('username')]",
          "computername": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n- path: \"/etc/systemd/system/kubectl-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=Kubectl extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/kubectldir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/kubectldir:/opt/kubectldir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/kubectldir/\"\n\n    ExecStartPre=/bin/mv /tmp/kubectldir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=false --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable= --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=Accelerators=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.0.0.0/8 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    DOCKER_OPTS=\n    KUBELET_OPTS=\n    KUBELET_REGISTER_SCHEDULABLE=true\n    KUBELET_NODE_LABELS=kubernetes.io/role=agent,agentpool=agentpool1,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n    KUBELET_NON_MASQUERADE_CIDR=',variables('kubernetesNonMasqueradeCidr'),'\n\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xUTXPiOBO++1d0kRze9yC0JKndWU/5QIInS+VrFpOaQ5KihN0YFbLskVow7A7/fcsfIWBIai4u9dP9PP3hlp4etaQXb4A2NrIgmevgxk1RIXkj/O6kQRskebxA07VoljJGrz8jNG3Qe4rq04s3QkvCUCDUSqytF+qlNLnOUNMXqTDgSDFPcCacIr5ockUujtHa8IekiAQ5G/Quzr3wB8ZRqfXVYMCnUvOpsHPgeUFc/OMM8jjXJKRGY1+lunZ+hJctEmmAFcCXwnAlp9vMvxIba/leLSyGjpzBE5z+L8udJvgJqcECnjvtTM8d+AmrGJj6PzCF8Bu8wGegOWqo01Z0xqZSJwdlHgKfYSY7x6pvZDKxQGbnwuChmncC47m0IC0IKIQhKRSscrMQJnc6AcqBSr8rLBkUGZQrYTQSlhzr0PdOAOZEhfU5TyXN3bQb51mlX8ftHiuK5Re9P3u/n1RGnGflPrDz3tnF2ac/znutRmzZiV3bmBSwFWikriyWF12Ki4lBMhLtWfBpn8RqFk5JTBVaYARalJNQ0tLRUFl8HBpwZ0011HrZwTgNzx4AYxopmOeWGrOQyZ5p5FIqTDFpAJM1h2WuXIYBT3Dpl58WbNfWrz4mb3nKP2ic9rcHszoS0Swr93et90Prtnaia+AD7bfr5h8B3yc2i7fDahC/WdEjtDz1t4cD4fIR2VkxvwUcDtCa5T5hHygJp4OHq5twNHn4Oo7e6WMlRIqa+J3QIsVkmKAmSWsWIZHUqfV/PfKgwlZLNVwol0pt2/21vM14AE7/vXm8DG/D8WR4178ONw0MwOfrAk0pAK8vyKurWtD6rWelL871TKZ7btTlRWHlY49mz6PzBJkSU1Q26Lxlv38YhJPb/mV4G206e4RlcNYS0CwT9rtDIxJksUxMsKtzP7nrR38/hqP+IJxcDQejzb5cNQdWD4Il0nw8xx3u6WuOq4f7L8PrN3v7+5u4bTGj8HoYjcNR1d3mmOPbcPzXZNwf3o+jjec9DbUlodSL901owuRyHWROkWTOoumSMCmS918AAAD//6H06HKBBwAA\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n\n    exit 0\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n\nruncmd:\n- echo `date`,`hostname`, startruncmd>>/opt/m\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- retrycmd_if_failure() { retries=$1; wait=$2; shift && shift; for i in $(seq 1 $retries); do ${@}; [ $? -eq 0  ] && break || sleep $wait; done; echo Executed \\\"$@\\\" $i times; }\n- retrycmd_if_failure_no_stats() { retries=$1; wait=$2; shift && shift; for i in $(seq 1 $retries); do ${@}; [ $? -eq 0  ] && break || sleep $wait; done; }\n- apt_get_update() { for i in $(seq 1 20); do apt-get update 2>&1 | grep -x \"[WE]:.*\"; [ $? -ne 0  ] && break || sleep 1; done; echo Executed apt-get update $i times; }\n- retrycmd_if_failure 120 1 nc -zuw1 $(grep nameserver /etc/resolv.conf | cut -d \\  -f 2) 53\n- retrycmd_if_failure 120 1 nc -zw1 aptdocker.azureedge.net 443\n- apt-mark hold walinuxagent\n- echo `date`,`hostname`, preaptupdate>>/opt/m\n- apt_get_update\n- echo `date`,`hostname`, postaptupdate>>/opt/m\n- retrycmd_if_failure 5 10 apt-get install -y apt-transport-https ca-certificates nfs-common\n- echo `date`,`hostname`, aptinstall>>/opt/m\n- systemctl enable rpcbind\n- systemctl enable rpc-statd\n- systemctl start rpcbind\n- systemctl start rpc-statd\n- echo `date`,`hostname`, predockerinstall>>/opt/m\n- retrycmd_if_failure_no_stats 180 1 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 5 10 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- systemctl daemon-reload\n- echo `date`,`hostname`, postdockerinstall>>/opt/m\n- systemctl restart docker\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n\n- echo `date`,`hostname`, PRE-APT-SYSTEMD-DAILY>>/opt/m\n- /usr/lib/apt/apt.systemd.daily\n- echo `date`,`hostname`, POST-APT-SYSTEMD-DAILY>>/opt/m\n- apt-mark unhold walinuxagent\n- mkdir -p /opt/azure/containers && touch /opt/azure/containers/runcmd.complete\n- echo `date`,`hostname`, endruncmd>>/opt/m\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('agentpool1osImageOffer')]",
            "publisher": "[variables('agentpool1osImagePublisher')]",
            "sku": "[variables('agentpool1osImageSKU')]",
            "version": "[variables('agentpool1osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat(variables('generatorCode'), '-', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "agentpool1",
        "resourceNameSuffix": "[variables('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')),'/cse', copyIndex(variables('agentpool1Offset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "echo"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "location": "[variables('location')]",
      "name": "[variables('masterAvailabilitySet')]",
      "properties": {
        "managed": "true",
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "3"
      },
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('virtualNetworkName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetCidr')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnet')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('nsgName')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow_ssh",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22-22",
              "direction": "Inbound",
              "priority": 101,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allow_kube_tls",
            "properties": {
              "access": "Allow",
              "description": "Allow kube-apiserver (tls) traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443-443",
              "direction": "Inbound",
              "priority": 100,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
              },
              "backendPort": 443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterLbIPConfigID')]"
              },
              "frontendPort": 443,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
              },
              "protocol": "tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "intervalInSeconds": "5",
              "numberOfProbes": "2",
              "port": 443,
              "protocol": "tcp"
            }
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('masterPublicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('masterFqdnPrefix')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "masterLbLoopNode"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
      "properties": {
        "backendPort": 22,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "[variables('sshNatPorts')[copyIndex(variables('masterOffset'))]]",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "nicLoopNode"
      },
      "dependsOn": [
        "[variables('vnetID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
                }
              ],
              "primary": true,
              "privateIPAddress": "[variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))]]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'),'nic-', copyIndex(variables('masterOffset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('username')]",
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
          "customData": "[base64(concat('#cloud-config\n\n\npackages:\n - jq\n - traceroute\n\n\nwrite_files:\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: ',concat('https://', variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))], ':443'),'\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n\n\n- path: /etc/kubernetes/manifests/kube-scheduler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SSQY/bIBCF7/kViDtC7RE1PbeHbVdaqfcxTGwUGBCMvfK/r0ideNdJat94b96H5wnI/g+W6hMZIacv8nD25IyQr8nJQ0QGBwzmIARBRCPkeexQVTugGwMWuRg1g13duTLGZgXoMNSWFoI9FiNsIi4pqByA8KLbFHMiJDbiM/tQM9qWHVLlX8jvqZyN4DK2XOOAJywLXT3/v/b5CH1zvzW7EDLWH3PG0o5vGe3366BNMQI5sxwbWOrhOio/yneXXFSl2qBNdPL9UU9QdPCdblpA1qu3CQUEh0VhQMvHtuPGzyWdfPDUH08Q6tadjl+vypTCGPEljcT14xZLPchWrR2sGCFii7wCD0ZIjWz1o7EbZ4Kigu/UsthT0KaAe1Ksfi/7DtAjsX4Bgh7dT4fEnmf1hsye+k9bFAT3m8J8eyj/+ti+ksc1tId2ufwGzP/pY6+L57SHpdwXsg/Yb+ZvAAAA///Or4sP3wMAAA==\n\n- path: /etc/kubernetes/manifests/kube-controller-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySMa+bMBDHdz7FyXMR6mpVb3lLO7z2SZG6RB0OcyVW7LNlH0R8+8oJ0LQhpWyY3/2O+58x2u+Usg2sQY0fVXW23GlQ76FTlSfBDgV1BcDoSYM6Dy3VJrCk4Byl2iNjT0nNRI5oVixPWciXTw5bcrloAMRS0jAr6uiQ6Xpugo+BiUXDkyZVjmSK5BSyfCW5hHTWIGkogoKjZUpzm/o//rg81mNfsE+FS0xC+fMUKZXXQyTzsoAmeI8lm6NqTguhPoDacP+YazD1WcPxzv26wm839jXwT9u/LBVjcIOntzCwZA3z4d00JKb+bVMrAOBLzTvKSYNqSEyzha2eEVPtbHt1OZKnohFT42zbPHCLyWe7V3tB7ImluU3cfemIxcpUH0jEcv/HFImw+8ZuWvd6C+TvpW7HUO7FtfkqjP/IYy+L57bNUB4D2RfsJ/MrAAD//wNK99agAwAA\n\n- path: /etc/kubernetes/manifests/audit-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7RVwY7jNgy95ysI51Cg2HiwtyK3aQsUBabbRbrTHoo5KBJjC1FIV6ST8d8Xkhw7mWSAHqY3JabI954eSdP5PzGKZ1qD6Z3Xev+D1J4fjp+3qOYzLOFb6wW8QMR/eh/R1Yu9J7eGrxy8HRZL+JnpO4UGCaNRLGkAj0gqsOMIJoR8GUUFPMGmnDdo0R/RgahpsF7wwesf6SjrBcAKqjdx1SL2oXxcwhM30LED2xpqUMDonFY6JkEIeMSQM+XT+m3AAgAgonAfbUmbYpvIfbeGqsq/U6nNGAJVx04qcIySCB+M2nYmpgyGBpB+e84JvEsY5dOU6tR62yYtLZN4USSFk9cWtEXY/Pj4E3RZ1Hq8MaODv0v1l8VEP//xELipPo1nUaO9VEmM31CNM2puVTh/+W/0bxDcKziCKj4I3MDpWprtkAlWMojiYb3vt7jqIr8OFTABkuvYJ7NwBMF49BblEvEXpvJYvWDMQG4TveSAI8ZtDsgAxj/f5whLsBwRHr/+Wv68R3qCl1if4d1SNr22SOqtUXRXrrAY1XgCYlpN1njePEFntJX6Xaa/JESXdK9KjOSI6ezP583TRLF6MJ3/PhH8ywdnTXTFrp6aego5lsavZkulVxqhw5bdkBxsmXa+OZhu6jVPkJUvsOo7LfYRuk91ZaQ6TqI0BIApDGC6LnjMGk83E7jstQuEFZA5oHTGYj1lQsBDpwOIRk9NAmUNwRaT9C6lFAxoNb/adN3NhUqm6UuGfFnzolHvyipoI+pZ0/9LxFLlamykaczaYrwWLecy5ABfFSn5Ig/VPJhG6BnehyGdA+aKKXRcR0mjHADSch8cfPn9W3oeTzb0Lm2hzOgRbPL1Ku+Y5Azl0o4XLMdWHNlcT8b63dGY1KJmFXuiZJApTfB7LAMuWa81CrtUrCeHEXRy6MmHAMQ65pq3I10uyDvrsBjrehmOHXuzEP8NAAD//+gVlJa+BwAA\n\n- path: /etc/kubernetes/manifests/kube-apiserver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4yRQWvjMBCF7/4VQuc1Zq9iCSy9NIe0gUAvoYexPHVEpJGQxg7+90Wu7TRt0tQ36733afQGgnnBmIwnJWT/VxZHQ40ScusbWThkaIBBFUIQOFRCHrsaSwgmYewxyklIAfSipiExuixZqNGmnBaCDUYltCeO3pbBAuF4rr0LnpBYiUt2kQLqnD34xE/IJx+PSnDsci5zwBDGiV7eni9/xkGb1X9ZjoSM6XEIGPPvLqBezUbtnYNcwF5Wh9kh/wh5Rr5OVohtUmL/Cfl/u96NngdPb6Zdzc7e287hxnfE07gXIyPr8gyRi0EIlyNb4IMSskLW1TXbwukhltbUI8si3wT1ECtr6uqbbyG5ZO6mTwAtElcbIGixWTdIbHgod8hsqL14R0RonskOy/o+Gvm6u+tF5PWPly/A8EMj99q4Tbtay4xzyfwacL+Z9wAAAP//THO1tHUDAAA=\n\n- path: /etc/kubernetes/manifests/kube-addon-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4yRsW7zMAyEdz8Fkd3w/w9ZhKJAxw5pAwTozkiEIySiXJFy4LcvZMdOWjRtR5LH43cSdv6NkvjIBvr/1dGzM7CNrgqk6FDRVACMgQwc855qdC5yHZCxpXQZSYd2nssgSqEC6G9cpSNbfA5R9IX0HNPRgKZMFYCNrOiZkhRF/dMtAB+wJQMPZZyYlOSpaDaTZNeRfRx1iSTmZGn0nBrvmUSXGsB22cA6LHWgENNgYP1v48dmH0850CZmntdmuJFLLpuhCLaoBwOrhtQ2V7ZmEq4WBnSvfBqW6FfHIP47ux5Tc/L75ozYEmsz5XTPjli9DvWOVD239y9MGT697A18+Y7x1GW9+y3FV9x7Bn/n/ggAAP//ovMbJ38CAAA=\n\n\n\n- path: /etc/kubernetes/addons/kube-heapster-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xWW2tjNxB+P79C+F1ep92AK+pCmk3bh2Y3JFAoLISxNOujWrfq4rX31xfpHNvnYgcTNlC9WGdGo2/mm4sMTv6FPkhrGNlcVWtpBCNP6DeS4w3nNplYaYwgIAKrCDGgkZEawYWIvhUEBxwZWacl0rALEXVFiIIlqpBtSNF4gxHDVNp3XKVsTEMDw8gk+oSTchKEsEaDgRX6ad9MW4GMPCK3hkuFFaW06rrvl8CnkGJtvfwGUVozXc+L5eZqiRH20d028I9W4YnQGv/ZPkL6VcaaGjBm93Yx3ZmQPN5tZYih8klhYBUl4OTv3iZX8CjBbUSTIw3lE5zLG4/BJs+xPSTQKbvTaGJWbtAvW8UKY/lVMjSbrxB5XXbJCYhYtq4IR9CTyRgJNy0IPZZA+2lFu3NWXObGd0jlr9IIaVb/y4xahY/4JYPsiX0hxIqQcZ1eEEtIy3+Qx1I6J9v48uYdpmM4GHokv47B/snGsT/6jl3iaXDIM7SzPrYllreMzGcFJoJfYXxoRfMfKkICKuTR+tbjeaDgXAcrB99E++HQTD02jo14qMazfIxuf8s6e2EYD/jc0+bRKckhMHI1YkbnzvyzE8zpcCJqpyBia9QhIi/Vsz9HCCFgjI2lCzqHA69RJIV+CsrVMCCAexklB0WdFawZUYTsAyu5twp9/05K1rhj5LY1vcn0hk9G7Q6Y1mUb6xk5kFru7bXSx2F15sWtiSAN+g6a1LBCRn4+er6v8SeH/JcDKrdagxHH0CmZvNvfP+lKKW2m8KJDRkhag989g5Ps8+Tz5GgwaqNm9Ub5UfhvwhB7MkK4S7lzdE+oUVu/Y+Tq/exedjRKavnqC06xVRL0iEF+u4gxZ8VzGYYDyrhLi/lMD6S4jR6Kbja9HiobDxfFwZN27YH3I3WsPYbaKrG4HmiOj/PiTG4PNXTugLNKUYdeWrH4cZbX0LkQpc4FvMCtswZNlKDOFcThFXxdWVyfyepPF1bFRfZoNt0kb0Al/M1b3b/vi0Ql2jd2JH+AWLPDaJpmDjrHGkru/35++PTh+ePN/d33Rysj+SXIp4eb2z1u/vv01JvEeeV3ZjAAbWBESZO21X8BAAD//0SxZ2rFCwAA\n\n- path: /etc/kubernetes/addons/kube-dns-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xYS2/jNhC++1cQ7ll+JMhuINQBgnXQDbZJjTrtfUKOJcIUyfDhxvvrC0qyLEq2Y+dQ1DdxXh/nm4dk0PxvNJYrmZLNdLDmkqVkiWbDKd5Tqrx0gwIdMHCQDgiRUGBK1v4VEyZtfWA10N2p3VqHxYAQAa8obLAhpcRIdGhHXI2p8NahSWwVJiVDZzwOS01gTMkCJGRoRrFZoRim5E+kSlIucJAkyeAU/Ah3hObWJqB1dI1LMMaaVUZ++FecPy8vyJDVSAOeOtLjIiW/risv9QUeF3cDQrQyrgSe1K53gIMgJTfX1YNRTlElUvLXfBErJ47qUwYv34KBRYHUKXMsRd1sg9Z2vJm+ooNd3ueohdoW2CmZzxXCYZI2DdlXk16uk/3hiXwb1IJTsCm56l27AEfz31t4j+HoIXFYaAEOaz+t65dVLaVy4LiSjV9CLM2ReYFmBELn0Kl2arjjFESiFUvJcFibiQjccXiXpPrAdQjZpauEv1pxyd12H1Yrdi8dv+8JQmHhCo1BNveGy2xZ3ZLL7DGTqjl+eEfqQ0Lapgn5B3mWu5RMJ5PWeRWvjvWCpkgjYZ2VZURl+1fS+vCuDVobc7CPvMZtustmT0yI0mggOCeP8oB4A8LjAb+l5y4z1c8prYTKtj/KwBFZubIuVPFgpylC8DbyGu+3ukjuw9S0f0ixHfQBP7xz65qyVcIX2PLTaSGq5IpnjZfq8Ql0+2q9CbePGUCCSEkorkHjwgGXaFpBwWStZCVkmCRMFcDlrK7TkVAUxGjY0ZE2CUNsNp1Mbq47ws3sqnNSgU8YN7Nx54J7TV5AhvXorRioR/lSI71r1ATfoERrF0a9YjsZK+DCG3zJDdpcCZaSm5Y0d07/hi4uDA0uT8lwnCMIl/9MQmgm7bBT8WFY305u40YIQyNk//vLy6IlCJ3BQcxRwHYZNiSzKfnSNrWeUrS2hXPakjpeoPKuMd3fYU92m+tmKe3S3bC8KHGXBPVKJuS/JDYaF/Hiutiho/qE02q5VT+DwPhBEk/S1JgdIWj6aYKuJ2dRYNAqb2g8XwQvuOtMnAILZbYpmX6dPPGWxOCbR9vVptqXeS0O+ohcVFPjKbwNRqyfHh6EFMFiUeax24EnZkGvk4XKnLKOoTGxoHI1P9ngQc+gdWDcXNoC7NssXn3lrIgf191JAjTHxPKfGEbPpCOVKgRQYtM5D7sWzWx69XU0GU1G018Oja1aacxlAoyZERgN4zNN9Jdz1IXKkhVQLrjbzpJTk2/+vHwC+xZPvqbTQurOHgCHm/Xyvj/e9B+2+7Gi/bgoSW/JfVy0CS3YTFqh1Nrr9j5nuAIv3Mhu6CjabqShjdyNGW7G0gvR4c4bMWv2RM1BtzY/Hzcty+XM6L0tVaqU6zhsqc75m+foTtVaeAH8Xrn+7zZtL4Pkf7dpa6hnN1oH97HNd+EGublggRzeHy0PTNqFEpxuwydiWZS1wEb/Mzwfeq2UimH/xT58dXa+l5RNieDSvw/+DQAA//9hDItW0xAAAA==\n\n- path: /etc/kubernetes/addons/kube-proxy-daemonset.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5RUy27bMBC8+ysI3RklVyEuULgBemkawEDva2psE+ZDWS5d++8LSrUtOYmb8kTMLoczswSps7/AycbQKBwEoWxTvX9YQehhtrOhbdQ3go9hCZl5CLUk1MyUcrSCS2Wn1C6vwAGCdGdjbVxOAtYJvLcGjaqEM6q+00TfxYAgTX9IdxwPx74iFtyoEFvMlArkcdVRoNSROeHpmAR+ljqYIkLgO0eCQdBYaFljsbdlvJGi1OmKvhQdmKSkdIK02uE4tGuODnfTNDyVMM7csSvnIzfq6TWTO+N7cnkaVVlYr2GkUc9xabZos8PsZCAI2QAeyTDRewrtxaVWVb09duCiqBrBU7taVVqXFhPD2m7m9Z64dnZVF8xB6kutmh46TdrYluePpW0xIAvb8per5jVIMkNvSJDmT4cObD2CkFuwFWvIvcT2awhR+nzn0ySsp03J5/GS7veTtWUHM7rtncczLEaKmQ1GD6GArxlJJphSpsuNeri/92c0wWS2clzEIDjIuL1ju7cOG7SNKqovQ40ue/yIOYz5tfIFeSHZNqqqIaZOydUGLKka0Q4+UnK6L+ltTDIRTu3P4I5Xd77DfonsLT3E6Ev9v+k/81TGExlq/7qmOH2G/I68m+BDnqMnXxp7KeNp/JWWE9dpS4zaUJ+gXVtDkxBuJHyb+zO2PzB9m/ijcd0YVvl4lnAw5Vc5Hygf+NVPFFOjnA35MPsTAAD//zcsf+33BQAA\n\n- path: /etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xVS2/jNhC+61cMfKe9we7BINoFtjGwPSSBYKe9j6mJxZqvkiM3atH/XlB+SY7jOEUDlCdhnt9885HCoH+lmLR3EjY3xVq7SsKC4kYr+qaUbxwXlhgrZJQFgMElmZS/ANbTJDAECetmSdERUxIVpnrpMVbbiINjrP1EmSYxRZG25SWMODY06iKxqryz6HBFcTxMs74iCXNS3iltqABwaOnVrtmZAqpdhEhtYrKFEKLoDxuXqMbYcO2j/hNZezdeT7t+m5slMe65uN2CnntDP2lXabca8HERyv+ArOgNzekpY8Cgv0ffhAuzFwAvpj4MuUeEldWuSM3yN1KcZCHgrGr+mzWdavJ1MV7N3lub+DewUyCVcQQfuQMkuk8JX7587poyxhVx2dmmW2MiQ4p9vE4f3AaS8OArykVe8ETPTC5/phP9zigY31q6dI8/5pZ+LNORgtEKk4SbF1xaZFXf9Sa8gl6ywSDTrkCPqXzMoNY1l3kPMx/lHaN2FA8VBGBcJQmHggKEwIa9WJGjiExCUWT9pBUypUFYTRi6BdU+8Y81c5CTyd447lElp58OidriiiT8cMQ728NdBFJfh4FlY0zpjVathG/mD2yPCIzekKOUyuiXdCQEIAP5Ttw3AQTkWsJoMhpa+7fgeJKqKevh58fHctHzaKdZo5mRwXaR9VUlCZ8/9SJYW/INn3NelNgRTm+34riv8hzQED175Y2Ex9vyYI+UfBMVpT4BkX5vKHEakqJCc34Tt+Uv813G10GGJetjez7pvvOdyzPa6vf0vsvx7218krTxprF0n38A/c7iwh46pad+W5vTy046k75zW3ywqneUJRu4neko4a+/d+Y0+GM9vCUV5ytaDB6afPJje/IW+iTBaNc8F/8EAAD//wWYXGxfCQAA\n\n- path: /etc/kubernetes/addons/azure-storage-classes.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8yQT0sDMRDF7/kUQ+9Z6U1y9aoiFrzKdDMtYfNnmZkU9NPLZuvCavFkxXPy3rzfD8fwQiyhZAeihfFI3XArXSg3p+2eFLdmCNk72M2PdxFFTCJFj4rOAGRM5MDTAWtUA4A5F0UNJcv0DJ+1/ZTspspuqHviTErtThB7Ttv2x8FGudLGAETcUzzXrEN9rKLEVohPoaclM3I5hQmH2H2J4Htlsj7IYKy15rfIE2Y8krcjUwo1fTdwLYgRGRMpceuetz7MY8xiHfu+1Kz6NpKDp3ni6/3z7ioKRDF7ZP+fHezOGxcJFwh/9HKBvw06hEh/At4OrcFlqI9tyYruIwAA//+8TAl83AMAAA==\n\n- path: /etc/kubernetes/addons/kube-tiller-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RUXWvbShB9169Y/C4Hc3PhslwCbmKSQJwaOy3tUxivpvY2+9WdWWP31xcpsaKvhuQhhepJu3uOzjkzo4WgP2Mk7Z0Uu0n2oF0hxQrjTiucKuWT48wiQwEMMhPCgUUpWBuD8WlJARRK8ZDWmNOBGG0mhIE1GioZojqJDhlprP2JMokYY06PIlKMOCYcVUgoCu8sONhgHLdp1hclduYoRZztNTGNsjzPs2aCuAY1hsRbH/VPYO3d+OG/ir6brJHhGPD80cPSG/ygXaHd5qWQfyZL9AaX+K2UgaAvo0/hhUCZEL0otfOjLSisdhml9XdUTDLLxWB/X9vVbrW789KqYbNoEIIUWzS2WnXE3rOmbbG8wGD84fcBKaAqHQcfubKe982WZ1Kcnk7+Oa3WDHGDvKh2axihQcU+viI+HwLWXbxe9IqMe0ZXvlJnhi+qMBY7P+jfXHdGGwwwPrpvpiqfZrJ+usGExw9X762hv+1ChVDeMWiHsdbIBbrds+BxGu6ub25my/vb6Xy2WkzPZzVAiB2Y1LsLB9lX16u7j8uv9/Pplz5/9P9zke8qj3PYX2liHw9noxqvLWxQih54FVCd1Sijd+iQaBH9GmVDbMscLpGbW0IE4K0UJ0dS+6ye/X8b+9pp1mAu0MBhhcq7gqSYNACsLfrEA2e9hh1VqFn1ujGLzr/3wkciQqHfnLpmvW/siORTVEhNExF/JCSmtjEV0kCDzxeflk/wsxbcovXxMMCYVwdDJKOtfrXqTQl+k2SL4XyBq9bdWD7lrda5VTxJYbRL++xXAAAA//9fQ5xvoQgAAA==\n\n\n\n- path: \"/etc/systemd/system/kubectl-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=Kubectl extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/kubectldir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/kubectldir:/opt/kubectldir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/kubectldir/\"\n\n    ExecStartPre=/bin/mv /tmp/kubectldir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=false --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable= --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates= --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.0.0.0/8 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    DOCKER_OPTS=\n    KUBELET_OPTS=\n    KUBELET_NODE_LABELS=kubernetes.io/role=master,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n  \n    KUBELET_NON_MASQUERADE_CIDR=',variables('kubernetesNonMasqueradeCidr'),'\n    KUBELET_REGISTER_NODE=--register-node=true\n    KUBELET_REGISTER_WITH_TAINTS=--register-with-taints=',variables('registerWithTaints'),'\n  \n\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xUTXPiOBO++1d0kRze9yC0JKndWU/5QIInS+VrFpOaQ5KihN0YFbLskVow7A7/fcsfIWBIai4u9dP9PP3hlp4etaQXb4A2NrIgmevgxk1RIXkj/O6kQRskebxA07VoljJGrz8jNG3Qe4rq04s3QkvCUCDUSqytF+qlNLnOUNMXqTDgSDFPcCacIr5ockUujtHa8IekiAQ5G/Quzr3wB8ZRqfXVYMCnUvOpsHPgeUFc/OMM8jjXJKRGY1+lunZ+hJctEmmAFcCXwnAlp9vMvxIba/leLSyGjpzBE5z+L8udJvgJqcECnjvtTM8d+AmrGJj6PzCF8Bu8wGegOWqo01Z0xqZSJwdlHgKfYSY7x6pvZDKxQGbnwuChmncC47m0IC0IKIQhKRSscrMQJnc6AcqBSr8rLBkUGZQrYTQSlhzr0PdOAOZEhfU5TyXN3bQb51mlX8ftHiuK5Re9P3u/n1RGnGflPrDz3tnF2ac/znutRmzZiV3bmBSwFWikriyWF12Ki4lBMhLtWfBpn8RqFk5JTBVaYARalJNQ0tLRUFl8HBpwZ0011HrZwTgNzx4AYxopmOeWGrOQyZ5p5FIqTDFpAJM1h2WuXIYBT3Dpl58WbNfWrz4mb3nKP2ic9rcHszoS0Swr93et90Prtnaia+AD7bfr5h8B3yc2i7fDahC/WdEjtDz1t4cD4fIR2VkxvwUcDtCa5T5hHygJp4OHq5twNHn4Oo7e6WMlRIqa+J3QIsVkmKAmSWsWIZHUqfV/PfKgwlZLNVwol0pt2/21vM14AE7/vXm8DG/D8WR4178ONw0MwOfrAk0pAK8vyKurWtD6rWelL871TKZ7btTlRWHlY49mz6PzBJkSU1Q26Lxlv38YhJPb/mV4G206e4RlcNYS0CwT9rtDIxJksUxMsKtzP7nrR38/hqP+IJxcDQejzb5cNQdWD4Il0nw8xx3u6WuOq4f7L8PrN3v7+5u4bTGj8HoYjcNR1d3mmOPbcPzXZNwf3o+jjec9DbUlodSL901owuRyHWROkWTOoumSMCmS918AAAD//6H06HKBBwAA\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -e\n\n\n\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n    sed -i \"s|<kubernetesAddonManagerSpec>|',variables('kubernetesAddonManagerSpec'),'|g\" \"/etc/kubernetes/manifests/kube-addon-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g; s|<kubeClusterCidr>|',variables('kubeClusterCidr'),'|g\" \"/etc/kubernetes/addons/kube-proxy-daemonset.yaml\"\n    sed -i \"s|<kubernetesKubeDNSSpec>|',variables('kubernetesKubeDNSSpec'),'|g; s|<kubernetesDNSMasqSpec>|',variables('kubernetesDNSMasqSpec'),'|g; s|<kubernetesExecHealthzSpec>|',variables('kubernetesExecHealthzSpec'),'|g\" \"/etc/kubernetes/addons/kube-dns-deployment.yaml\"\n    sed -i \"s|<kubernetesHeapsterSpec>|',variables('kubernetesHeapsterSpec'),'|g; s|<kubernetesAddonResizerSpec>|',variables('kubernetesAddonResizerSpec'),'|g\" \"/etc/kubernetes/addons/kube-heapster-deployment.yaml\"\n    sed -i \"s|<kubeDNSServiceIP>|',variables('kubeDNSServiceIP'),'|g\" \"/etc/kubernetes/addons/kube-dns-deployment.yaml\"\n\n\n    sed -i \"s|<kubernetesDashboardSpec>|',variables('kubernetesDashboardSpec'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPURequests>|',variables('kubernetesDashboardCPURequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryRequests>|',variables('kubernetesDashboardMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPULimit>|',variables('kubernetesDashboardCPULimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryLimit>|',variables('kubernetesDashboardMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n\n\n\n    sed -i \"s|<kubernetesTillerSpec>|',variables('kubernetesTillerSpec'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPURequests>|',variables('kubernetesTillerCPURequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryRequests>|',variables('kubernetesTillerMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPULimit>|',variables('kubernetesTillerCPULimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryLimit>|',variables('kubernetesTillerMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMaxHistory>|',variables('kubernetesTillerMaxHistory'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n\n\n\n\n\n\n\n\n\n\n\n\n    sed -i \"s|<kubernetesControllerManagerConfig>|\\\"--allocate-node-cidrs=false\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--cluster-cidr=10.240.0.0/12\\\", \\\"--cluster-name=architech-k8s\\\", \\\"--cluster-signing-cert-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cluster-signing-key-file=/etc/kubernetes/certs/ca.key\\\", \\\"--feature-gates=ServiceNodeExclusion=true\\\", \\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--node-monitor-grace-period=40s\\\", \\\"--pod-eviction-timeout=5m0s\\\", \\\"--profiling=false\\\", \\\"--root-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--route-reconciliation-period=10s\\\", \\\"--service-account-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--terminated-pod-gc-threshold=5000\\\", \\\"--use-service-account-credentials=true\\\", \\\"--v=2\\\"|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesAPIServerConfig>|\\\"--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,AlwaysPullImages\\\", \\\"--advertise-address=<kubernetesAPIServerIP>\\\", \\\"--allow-privileged=true\\\", \\\"--anonymous-auth=false\\\", \\\"--audit-log-maxage=30\\\", \\\"--audit-log-maxbackup=10\\\", \\\"--audit-log-maxsize=100\\\", \\\"--audit-log-path=/var/log/audit.log\\\", \\\"--audit-policy-file=/etc/kubernetes/manifests/audit-policy.yaml\\\", \\\"--authorization-mode=Node,RBAC\\\", \\\"--bind-address=0.0.0.0\\\", \\\"--client-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--etcd-cafile=/etc/kubernetes/certs/ca.crt\\\", \\\"--etcd-certfile=/etc/kubernetes/certs/etcdclient.crt\\\", \\\"--etcd-keyfile=/etc/kubernetes/certs/etcdclient.key\\\", \\\"--etcd-quorum-read=true\\\", \\\"--etcd-servers=https://127.0.0.1:2379\\\", \\\"--insecure-port=8080\\\", \\\"--kubelet-client-certificate=/etc/kubernetes/certs/client.crt\\\", \\\"--kubelet-client-key=/etc/kubernetes/certs/client.key\\\", \\\"--profiling=false\\\", \\\"--repair-malformed-updates=false\\\", \\\"--secure-port=443\\\", \\\"--service-account-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--service-account-lookup=true\\\", \\\"--service-cluster-ip-range=10.0.0.0/16\\\", \\\"--storage-backend=etcd3\\\", \\\"--tls-cert-file=/etc/kubernetes/certs/apiserver.crt\\\", \\\"--tls-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--v=4\\\"|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesAPIServerIP>|',variables('kubernetesAPIServerIP'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n- path: \"/opt/azure/containers/mountetcd.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('mountetcdScript'),'\n\n- path: \"/etc/systemd/system/etcd.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=etcd - highly-available key value store\n    Documentation=https://github.com/coreos/etcd\n    Documentation=man:etcd\n    After=network.target\n    Wants=network-online.target\n    [Service]\n    Environment=DAEMON_ARGS=\n    Environment=ETCD_NAME=%H\n    Environment=ETCD_DATA_DIR=\n    EnvironmentFile=-/etc/default/%p\n    Type=notify\n    User=etcd\n    PermissionsStartOnly=true\n    ExecStart=/usr/bin/etcd $DAEMON_ARGS\n    Restart=always\n    [Install]\n    WantedBy=multi-user.target\n    Alias=etcd.service\n\n- path: \"/opt/azure/containers/setup-etcd.sh\"\n  permissions: \"0744\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -x\n    retrycmd_if_failure() { retries=$1; wait=$2; shift && shift; for i in $(seq 1 $retries); do ${@}; [ $? -eq 0  ] && break || sleep $wait; done; echo Executed \\\"$@\\\" $i times; }\n    ETCD_VER=v',variables('etcdVersion'),'\n    DOWNLOAD_URL=',variables('etcdDownloadURLBase'),'\n    retrycmd_if_failure 5 5 curl --retry 5 --retry-delay 10 --retry-max-time 30 -L ${DOWNLOAD_URL}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz\n    tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /usr/bin/ --strip-components=1\n    systemctl daemon-reload\n    systemctl enable etcd.service\n    sudo sed -i \"1iETCDCTL_ENDPOINTS=https://127.0.0.1:2379\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CA_FILE=',variables('etcdCaFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_KEY_FILE=',variables('etcdClientKeyFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CERT_FILE=',variables('etcdClientCertFilepath'),'\" /etc/environment\n\n\nruncmd:\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- retrycmd_if_failure() { retries=$1; wait=$2; shift && shift; for i in $(seq 1 $retries); do ${@}; [ $? -eq 0  ] && break || sleep $wait; done; echo Executed \\\"$@\\\" $i times; }\n- retrycmd_if_failure_no_stats() { retries=$1; wait=$2; shift && shift; for i in $(seq 1 $retries); do ${@}; [ $? -eq 0  ] && break || sleep $wait; done; }\n- ensure_etcd_ready() { for i in $(seq 1 1800); do if [ -e /opt/azure/containers/certs.ready ]; then break; fi; sleep 1; done }\n- apt_get_update() { for i in $(seq 1 20); do apt-get update 2>&1 | grep -x \"[WE]:.*\"; [ $? -ne 0  ] && break || sleep 1; done; echo Executed apt-get update $i times; }\n- retrycmd_if_failure 120 1 nc -zuw1 $(grep nameserver /etc/resolv.conf | cut -d \\  -f 2) 53\n- retrycmd_if_failure 120 1 nc -zw1 aptdocker.azureedge.net 443\n- ensure_etcd_ready\n- /opt/azure/containers/setup-etcd.sh > /opt/azure/containers/setup-etcd.log 2>&1\n- apt-mark hold walinuxagent \n- /bin/echo DAEMON_ARGS=--name \"',variables('masterVMNames')[copyIndex(variables('masterOffset'))],'\" --peer-client-cert-auth --peer-trusted-ca-file=',variables('etcdCaFilepath'),' --peer-cert-file=',variables('etcdPeerCertFilepath')[copyIndex(variables('masterOffset'))],' --peer-key-file=',variables('etcdPeerKeyFilepath')[copyIndex(variables('masterOffset'))],' --initial-advertise-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --listen-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --client-cert-auth --trusted-ca-file=',variables('etcdCaFilepath'),' --cert-file=',variables('etcdServerCertFilepath'),' --key-file=',variables('etcdServerKeyFilepath'),' --advertise-client-urls \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\" --listen-client-urls \"',concat(variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))], ',https://127.0.0.1:', variables('masterEtcdClientPort')),'\" --initial-cluster-token \"k8s-etcd-cluster\" --initial-cluster \"',variables('masterEtcdClusterStates')[div(variables('masterCount'), 2)],' --data-dir \"/var/lib/etcddisk\"\" --initial-cluster-state \"new\" | tee -a /etc/default/etcd\n- /opt/azure/containers/mountetcd.sh\n- /bin/chown -R etcd:etcd /var/lib/etcddisk\n- systemctl stop etcd\n- systemctl daemon-reload\n- systemctl restart etcd\n- MEMBER=\"$(sudo etcdctl member list | grep -E ',variables('masterVMNames')[copyIndex(variables('masterOffset'))],' | cut -d',variables('singleQuote'),':',variables('singleQuote'),' -f 1)\"\n- sudo etcdctl member update ${MEMBER} ',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\n- retrycmd_if_failure 5 5 curl --cacert /etc/kubernetes/certs/ca.crt --cert /etc/kubernetes/certs/etcdclient.crt --key /etc/kubernetes/certs/etcdclient.key --retry 5 --retry-delay 10 --retry-max-time 30 --max-time 60 \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\"/v2/machines\n- apt_get_update\n- retrycmd_if_failure 5 10 apt-get install -y apt-transport-https ca-certificates\n- retrycmd_if_failure_no_stats 180 1 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 5 10 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- systemctl daemon-reload\n- systemctl restart docker\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n- /usr/lib/apt/apt.systemd.daily\n\n- apt-mark unhold walinuxagent\n- touch /opt/azure/containers/runcmd.complete\n\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[variables('sshPublicKeyData')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "dataDisks": [
            {
              "createOption": "Empty",
              "diskSizeGB": "[variables('etcdDiskSizeGB')]",
              "lun": 0,
              "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
            }
          ],
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSku')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "tags": {
        "creationSource": "[concat(variables('generatorCode'), '-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "master",
        "resourceNameSuffix": "[variables('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'/cse', copyIndex(variables('masterOffset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "echo"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "agentStorageAccountPrefixes": {
      "type": "array",
      "value": "[variables('storageAccountPrefixes')]"
    },
    "agentStorageAccountSuffix": {
      "type": "string",
      "value": "[variables('storageAccountBaseName')]"
    },
    "agentpool1StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpool1StorageAccountsCount')]"
    },
    "agentpool1StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpool1StorageAccountOffset')]"
    },
    "agentpool1SubnetName": {
      "type": "string",
      "value": "[variables('agentpool1SubnetName')]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    },
    "primaryAvailabilitySetName": {
      "type": "string",
      "value": "[variables('primaryAvailabilitySetName')]"
    },
    "resourceGroup": {
      "type": "string",
      "value": "[variables('resourceGroup')]"
    },
    "routeTableName": {
      "type": "string",
      "value": "[variables('routeTableName')]"
    },
    "securityGroupName": {
      "type": "string",
      "value": "[variables('nsgName')]"
    },
    "subnetName": {
      "type": "string",
      "value": "[variables('subnetName')]"
    },
    "virtualNetworkName": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    }
  }
}
